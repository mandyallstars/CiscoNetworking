Course Overview
Course Overview

Hi everyone! My name is Ross Bagurdes, and welcome to my course, Building and Troubleshooting a Network with ICND1 Skills. I'm a network engineer with 20 years' experience building and managing Enterprise networks and teaching people about them. This course was built to help people become as prepared as possible to earn that CCENT certification by taking the ICND1 exam from Cisco. In this course, we're going to review the most important terminology from the previous 13 courses, as well as build and troubleshoot a lab incorporating all of those ICND1 topics. Some of the major topics we're going to cover are reviewing the most critical terminology for that exam. We're going to understand your learning style, which will help you retain information while you're studying. We're going to design and build a network that incorporates all of those ICND1 exam topics, and then we're going to troubleshoot that network we designed to build those critical troubleshooting skills that are so valuable as a data network engineer. By the end of this course, you'll have the resources you'll need to study for and retain as much information as possible to take that ICND1 exam. Before beginning this course, I highly recommend watching and studying the previous 13 courses in the ICND1 series. After completing this course, you should feel comfortable moving on to the ICND2 study materials, which will help you prepare for the CCNA exam. I hope you'll join me on this journey to review ICND1 exam topics with the Building and Troubleshooting a Network with ICND1 Skills course at Pluralsight.
Review and Lab Network Drawing
Introduction

Welcome to Pluralsight. I'm Ross Bagurdes. This course is Building and Troubleshooting a Network with ICND1 Skills, and this is for the CCNA 200-125 and 100-105 exams. In this course, we're going to review the last 13 courses, which will help get you prepped for the ICND1 exam, which will earn you your CCENT certification or Cisco's Certified Entry-Level Network Technician. In this first module, we're going to do some review of protocols and concepts and then introduce the lab that we're going to use for the rest of the course to build and troubleshoot the network with all the skills that we've learned so far. So our goals in this module are to, first, review the OSI module and TCP/IP model and the protocols and concepts that are assigned to each layer. Now we have done this before in a previous course, but I want to just reiterate the importance of it, and we're going to go through the mapping of those protocols once again. Second, we're going to describe the ICND1 lab network that we're going to use and then take that network and create the drawing and label it with IP addresses, device names, interface names, and other information that's relevant so that we can go build our network and do some testing, troubleshooting, and observation of how all these protocols interact together.
Reviewing the TCP and OSI Models

If you watched the TCP and UDP course where we talked about those transport layer protocols, I started that course off with the mapping of all these protocols and concepts of data networking into the OSI model. So up there at the top, we have the physical layer with our cabling, fiber optics. Then we have our data link layer with Ethernet, VLANs, and whatnot. We have the network layer here with IP addressing and routing protocols. Transport layer--we have the TCP and UDP. And then up at the application layer, that's where we have TFTP, SSH, HTTP, protocols like this. Understanding where these protocols fall in the OSI model is incredibly important to your career in data networking. I realize it seems a little goofy at first to have to memorize what layer each protocol goes under. However, the long-term value of this is so enormous. When we talk in data networking, we typically are talking about data link layer protocols, network layer protocols, or application layer protocols. When working in data networking and we're troubleshooting with other engineers, it's really important we understand which layer of the OSI model each protocol operates because when we communicate, we will typically say, Oh, that is a layer 2 problem, meaning it's probably related to Ethernet or VLANs or trunking. Or we might say it's a layer 3 problem meaning it's something with IP or routing that's broken. We might also say it's a transport layer problem, maybe TCP isn't working correctly, or we're seeing issues with TCP negotiating a three-way handshake. Additionally, we might specify that it's an application layer problem meaning that there's something up with the server and somebody who supports the server needs to take some action in order to get their system up and running again. So understanding the layer of the OSI model that each protocol operates is incredibly important in our communication with other engineers. And although it seems a little hokey at first to have to go through and memorize all this, the value is enormous. So I highly recommend if you need to, go back to the TCP and UDP course, and I have it laid out where all these concepts are randomized on the screen. You can use that then to go plot where each one operates. Now we have the TCP/IP model and the OSI model. Typically, I've worked with the OSI model. I think the OSI model is a lot more common in industry when we communicate than the TCP/IP model. The OSI model starts with a physical layer at the bottom there in layer 1 and goes up to the application layer at layer 7. If I introduce the TCP/IP model right next to this, it does map very nicely. Here in the TCP/IP model, application layer protocols are mapped to application, presentation, and session protocols, which is pretty common of how we actually map things in data networking. Usually if it's not a data link layer, network layer, or transport layer problem that we're troubleshooting, we consider it to be an application layer protocol regardless of what layer of the OSI model the actual protocol falls in. The transport layer here is nice because it maps directly with the transport layer. The internet layer is the network layer of the OSI model. And TCP/IP model combines the physical and data link layers of the OSI model into a single network interface layer. Now my personal opinion is that the TCP/IP model does make a little bit more sense. However, once again, we communicate in data networking talking about the layers of the OSI model usually in the terms of layer 1 as physical, layer 2 as data link, layer 3 as network, layer 4 as transport, and layer 7 as application. If I add in another piece of information here, if we talk about the datagrams and what we call them at each layer of the OSI model, down at the physical layer, we really don't have a name here, but effectively the data that's being transmitted is a signal of some kind, either a pulse of 1s and 0s over a copper wire or fiber optic or pulses of electromagnetic waves through space via wireless. Up at the data link layer, we call the chunk of data with a header, we call that a frame. At the network layer, we call it a packet. And at the transport layer, we call it a segment. It is critical when we are studying for the CCNA exams that you understand the difference between these three. It does become challenging in communication and data networking because oftentimes we refer to anything going across a network as a packet. That generic term packet does refer to typically stuff going across a network. However, when we're talking about it in terms of troubleshooting and support and taking an exam, a packet has a ridiculously precise definition as a layer 3 function at the network layer of the OSI model or internet layer of the TCP/IP model. So make sure you have these memorized and are able to correctly speak in the terms of these because when we're talking about Ethernet, we're talking about Ethernet frames, not Ethernet packets, not Ethernet segments. When we're talking about internet protocol, we're talking about IP packets. And we're not talking about IP frames, and we're not talking about IP segments. And when we're talking about TCP or UDP, we're talking about segments. And there is no such thing as a TCP packet or a TCP frame. So when we're working with this in the most precise way, frame/packet/segment have very precise definitions as far as what they are. Make sure you know that before you enter the CCNA exam, and also to have that terminology under your belt to be a successful network engineer I believe is incredibly important as well. If we talk about the devices that operate at each layer of the OSI model, down at the physical layer, this is where we have a hub. A hub is nothing more than a signal repeater. The data link layer, layer 2, we have a switch. A switch is a device that has an ASIC in it that can read frame headers. Sometimes switches are called bridges or bridges are called switches. So another type of device there that I don't have listed is the bridge, but a bridge and a switch are effectively the same thing. We're going to learn more about that in a course coming up very soon when we talk about spanning tree protocol where spanning tree protocol literally refers to switches as bridges. Up at layer three, we have a router. Router's entire purpose is to move packets from one interface to another interface. Those routers do that by grabbing frames off of the wire via their interface. They strip the frame header off, take a look at the packet header, find out the destination address, rebuild the frame, and then send the frame out on the wire again. So the job of a router is to move data from one network to another network. Another way we can look at that is the router breaks up our broadcast domains. What I'm referring to here as networks, we're actually referring to broadcast domains. Now up at layer 4, I have the transport layer. The device I have listed for that is a firewall. I don't think that you commonly need to know that the firewalls are a transport layer device or you can see up there application layer device, but they typically are transport layer devices because stateful firewalls do keep track of the state of a TCP session, and they will actually filter traffic based on what's expected to happen in that TCP conversation. So firewalls really are doing a deep dive into TCP operation. And modern firewalls, the next generation firewalls, I call these layer 7 or layer 8 firewalls. What those are doing is they're actually getting into the application layer information, and they're making sure that not only is the TCP session legitimate, but it's also making sure that whatever application layer protocol we're using is also legitimate and that we're not trying to sneak malicious traffic through, say, a port 80 conversation, which is supposed to be a conversation to retrieve a website via HTTP. What we could actually do is put malicious traffic in that payload and attack the web server. So our layer 7 and layer 8 firewalls actually are inspecting that information and making sure that our HTTP traffic is actually HTTP. If we pull that out and take a look at some protocols here, the protocols that we looked at that were very common at each layer, here we have at the application layer we talked about HTTP, HTTPS, Telnet, SSH, FTP, TFTP, SFTP, SNMP (simple network management protocol, which we'll get into in a few courses down the road). We have SMTP (simple mail transfer protocol), POP3, and IMAP. We didn't talk a lot about those three email protocols. However, they are out there, and we do use them. So I skipped over the presentation and session layers and went right to transport layer. The reason I do this is that in my personal experience, we do not really discuss stuff happening at those two layers as separate things. Now when you take the CCNA certification exams and you're considering the world from Cisco's perspective, what we need to do is realize that at the presentation layer, we have stuff happening there. And the stuff that Cisco and the academic world believe is happening there is things like file formatting and encryption. Now file formatting, I'm talking things like JPEGs or MPEGs or GIFs, things like that. Those are technically considered presentation layer protocols, as well as some encryption is supposed to happen at the presentation layer. My personal experience is that any presentation layer stuff happens outside of the OSI model entirely. If I take a picture with my camera, it stores it as a JPEG file, but it doesn't involve the data network at all. I'm just taking a picture. I literally push the button on my digital camera. My digital camera doesn't even have a network connection on it. So it's creating a JPEG image, and it's not even using the OSI model here. So the presentation layer for our perspective when we're actually doing it in practical world, we don't really use that much. When we're taking exams and pretending like we are Cisco experts of the OSI model, then we're going to put JPEG, MPEG encryption and other formatting up at the presentation layer. The session layer--technically we have a protocol that works directly with HTTPS called the TLS or transport layer security, which sounds a little odd that TLS is going to be a session layer protocol, but technically it is a session layer protocol. People could argue with this, but now we're doing encryption at the session layer. There are other session layer protocols like the ICA Citrix client. From our perspective as engineers, what you need to know is that there are session layer protocols like remote procedure call and TLS and ICA. You might be asked about those should you take an exam on it. But in the real world, we don't actually use that information. To move on here, we go to the transport layer. This is, of course, TCP and UDP. When we go down to the network layer, we have IP as the primary protocol there, and then we can put other protocols on top of that like TCP/UDP. But ICMP, Internet Control Message Protocol, which is what Ping uses to send messages back and forth, is also a network layer protocol. It just cannot run independently from IP. So if we're going to use ICMP at the network layer, we must also use IP. At the data link layer, we have protocols like Ethernet, PPP, or 802. 11 protocols or wireless Ethernet protocols. And then down at the physical layer, we have wireless, Glass, and RF or photons, radiofrequencies or photons transferring information wirelessly.
Protocol Hierarchy

To take this a step further, something that you'll definitely need to know is the transport layer port numbers for each of the most common layer 7 application layer protocols. So here I've listed them out, HTTP, HTTPS, Telnet, SSH, FTP, SFTP, POP3, IMAP, SMTP, DNS, SNMP, and TFTP. And then if you notice on the third row down, I've listed the transport layer protocols involved there. So most of them are using TCP. And then we have DNS and SNMP that can use TCP or UDP. But typically you'll find that DNS and SNMP are almost always using UDP for their transport layer protocol. TFTP always uses UDP down at the transport layer. The port numbers there I've listed. If there's a single number there like 80, 443, 23, and 22 for our first four, those typically mean that those are the default single port number for each of those protocols. FTP uses two port numbers, 20 and 21, one for authentication and one for data transmission. SFTP if you notice uses the same port number as SSH. The reason there is that we're taking the FTP protocol, and we're literally just pushing it through an SSH tunnel. POP3, IMAP, and SMTP all have two numbers listed there with a slash. The top number I have listed is the unencrypted port number, and the bottom number I've listed is the encrypted port number. So each of these three protocols can either operate in an encrypted mode or unencrypted. And the port numbers are different depending upon if we're using encryption or not. DNS is always port 53. SNMP is port 161. And TFTP is port 69 dude. I always remember Bill and Ted when I think of that. All of these protocols require then IP to transport the information across our data network. And then once we put it inside of an IP packet, we can put it in all kinds of different frames whether that be an Ethernet frame, a PPP frame if we're doing it over dial-up or a serial link, or an 802. 11 frame if we're sending it over a wireless network. My advice here before taking the ICND1 exam or the ICND2 exam or the CCNA exam, whichever exam you're going to be taking, is to make sure that you study and memorize and know this OSI model/TCP/IP model hierarchy, know the protocols that operate at each layer, be able to identify the port numbers of those protocols, know which protocols at the application layer use TCP or UDP, and then understand how that hierarchy allows us to build segments, packets, and frames so that we can send them over the wires to accommodate data networking.
Examining Our Lab Environment

Well let's move on to this next section where we talk about the lab we're going to build for the ICND1 exam review. Now the topics that I wanted to include in this are pretty much everything that we've covered so far, which includes IP addressing, static and dynamic routing, Ethernet, VLANs, trunks, and port security, effectively layer 2 stuff, serial links, another layer 2 technology that we didn't spend a ton of time on, but you're going to need to know just a little bit about for the ICND1 exam. We're going to be talking a lot more about it for the ICND2 exam, and we'll spend ample time on that in another course. We're going to talk about static and dynamic Network Address Translation, access control lists. We'll set up a web server. In addition, we're also going to talk about this thing called a voice VLAN that we use for voice-over IP phones and how the voice-over IP phone actually has a little switch in it that allows us to build a trunk link to that phone and then hook up a PC to that. So we'll take a look at how that operates as well in our drawing here. So the equipment that I wanted to use, the equipment that I've recommended and have been using throughout the course is three 1841 routers. Those 1841 routers each have two fast Ethernet interfaces. They also have two serial interfaces. I have two 2960 switches. Those are my layer 2 switches. I know they're layer 2 because they start with the number 2. And then I have my 3560 switch, which is my layer 3 switch because it starts with the number 3. So I have that 3560 switch in there as well, and I want to use that 3560 as both a router and a switch. You can see over on the right-hand side of the drawing, I have a cable going from my 2960 switch to a voice-over IP phone, and then my voice-over IP phone is hooked up to a PC. What we want to do here is start to label this drawing now with interface numbers and device names. So the first thing I'll do is I'll bring in some interface numbers and device names. The big reason I want to do this is that I want to pre-plan my network. I don't want to just hack a network together and start plugging things in without knowing what interfaces have what IP address on them or what interfaces connect to what other device. So on my drawing here, I'm going to make a very clear labelling of what interfaces I have plugged in so that I can set up my lab network exactly as my drawing is. This is going to make troubleshooting incredibly easy. I usually see newbie students not wanting to build a drawing, and I don't know why. I really can't fathom why because when we're building a complex network, and we're incorporating lots of different topics into it, without having a drawing, it becomes nearly impossible to do any kind of real troubleshooting. Without the ability to do any kind of real troubleshooting, what ends up happening is you end up with a broken network, no ability to troubleshoot it, and you end up confused and frustrated. And usually at this point what I see students do is they just start slamming their hands in the keyboard putting any command in anywhere possible for the hope and glimmer of hope that something might happen to give them a clue as to why their network is broken. And I'm telling you right now that it's the wrong way to approach this. The way we want to do it is a very methodical, clean, and detailed approach with a very nice drawing. If you're a new engineer, and you're entering a network that doesn't have a drawing, what a great opportunity to learn about how the network is set up by building a drawing. You can go back to the troubleshooting course when I talked about using CDP to build a network diagram. So we have this drawing set up now with the devices labelled. We have our interfaces labelled. And now we need to do some layer 2 stuff. So let's take a look at trunking. So I've highlighted the links that I want to make trunk ports with here in purple. Over on the left-hand side of the drawing connected to the 2960-2 switch, I have the web server that I want to hook up on VLAN 80, and then I have a PC that I want to hook up on VLAN 20. So that switch 2960-2 needs two VLANs assigned to it, which means that the link between the 2960 and the router is going to have to be a trunk link, which means F0/1 on router 2 or R2 is going to have to be configured as router on a stick. Then on the right-hand side of the drawing, you'll see that F0/2 of my 2960-1 switch, that is also going to have to be a trunk link, and we're going to put two VLANs on there, VLAN 10 for our voice traffic, and VLAN 15 for our data traffic. And the reason we do this is that later on, we're going to learn that we have to apply some quality of service rules to our voice traffic so that our voice traffic always gets priority on our network, and that our data traffic (emails, websites, and things) that those get paused temporarily while the voice traffic gets priority, and that should make some sense because we really don't want to have to have our phone call interrupted because somebody else is streaming a movie on Netflix or watching the NCAA Final Four basketball tournament. So regardless of what's causing all the network traffic, we definitely want to prioritize the voice traffic because a phone call is going to be way more important than somebody's data stream of some video. So we're going to have to set up those trunk links. So I've labelled my trunk links there. The trunk link on F0/1 of the 2960-2 switch is going to have VLANs 20 and 80 on it. And then the trunk link coming from the 3560 going to the 2960-1 is going to have VLANs 10 and 15. Next, let's take a look at IP addresses. So we'll start slow here. We'll start with R2 and specifically the connection to the trunk link on F0/1 of R2. So in the trunk link, we're going to set up two sub-interfaces. On F0/1, we're going to set up F0/1. 20 and. 80 and assign those IP addresses accordingly. Now for this example, I'm keeping my IP addressing super, super simple and using /24s everywhere. The one thing I'm not going to go over in detail here is reviewing the IP address exercises of determining whether an IP address is a network address, host address, or broadcast address or figure out given a specific IP address what network is that IP address on. You can do all of those exercises by going back to course 2 where we talk about all of the network layer addressing fundamentals that you need. So we'll set up R2 like that. Next, we'll go onto the 2960-1 switch here. Now we need that VLAN 10 and VLAN 15 here. So on the 3560, I'm going to set up two VLAN interfaces, one for each of the networks--one for the voice network and one for the data network. We're going to assume that there's a trunk link for 10 and 15 coming out of F0/1 of our switch. Next what we'll need is we'll need some networks to use to connect the routers together. So here between router 1 and router 2 on our serial link, I'm going to use the 10. 0. 0. 0/30 network. From router 1 to the 3560, we're going to use 10. 0. 0. 8/30. And then from router 3 to the 3560, we're going to use 10. 0. 0. 12/30. And then between R2 and R3, we'll use 10. 0. 0. 4/30. So for those linking networks where we only have two devices connected to the network, we're going to use that /30 subnet mask, which only gives us two host addresses. And what I'll do then is I'll label the IP addresses we're going to put on each interface. And instead of writing out the whole IP address next to the interface, that gets a little messy with the drawing, so I'm going to say that serial 0/0 of router 1 has an IP address of 10. 0. 0. 1/30 and serial 0/0 of router 2 or R2 has the IP address 10. 0. 0. 2/30. And I've labelled that throughout the drawing. So this will be the master drawing we use for the rest of this course to build and troubleshoot this data network. As we move through it, we are going to add more and more information to this because what we'll find out is that although this drawing will get us very far, it won't get us entirely all the way to have a network that we can manage and support. Let's wrap up what we've done here so we can go move on to actually building this network using all the skills that we've learned so far.
Summary

So to wrap up, we've reviewed the OSI model and the TCP/IP model and the protocols and concepts affiliated with each one. We've described our ICND1 lab network and all the concepts that we want to include in that lab network. Then what we've done is we've labelled and IPed the lab network drawing that we've created. This is going to be our base for the rest of the course. I hope you enjoyed this module. Let's move on to some demonstration now of actually configuring and setting up that network so that we can go on and do some real hardcore troubleshooting and support and enhance our skill set of the ICND1 topics.
Building the ICND1 Lab Network: Routers
Introduction

Welcome to Pluralsight. I'm Ross Bagurdes. This next module, we're going to start building the ICND1 lab network that we designed in this course. Since there's a lot of configuration going on here, we're going to start with the routers. This next module after this we'll do the switches. If we look at our goals this module, we're going to start by building this ICND1 lab network. We're going to start with just the routers. And what I'd like to do here is use a combination of the routers and Notepad to help us build the configurations that we can use on these devices.
Demo: Configuring R3

So in the demonstration, we're just going to build this lab network. So here's the lab network that we're going to use. I want to start with one of the more simple routers to configure here and move our way up to the more complex stuff. The simplest router that we have here is R3. It only has two interfaces configured on it. So we're going to start with R3 and then move on to the rest of the network. One of the things that I did not list when we were going through the description of this is our loopback interface address. Now it's a good idea to set a loopback interface on our routers. What we can use that for is an IP address to SSH to or to ping to determine the status of R3. And this is a good idea because if for whatever reason F0/0 goes down, we can still reach 10. 0. 99. 3, or if F0/0 is up and F0/1 is down, we can still reach 10. 0. 99. 3. We don't have to worry about remembering the IP addresses for each interface on the router. And then when we try to SSH to it, if that interface that we know the IP address is down, the router might be available, but we may not be aware that it's available. So my point here is that that loopback interface is going to be very valuable for us long term. Let's look at the tasks that we have before we configure R3. The first thing we're going to do is put the base configuration on that device. That includes securing user mode and privileged mode, also enabling SSH, and enabling SSH means that we have to configure a hostname and a domain name and some other items like a username and password. So we're going to put that base configuration on our router. And then we're going to configure the interfaces. Here we have three--F0/0, F0/1, and loopback 0. So we're going to configure that loopback IP address. And then we're going to use OSPF as our routing protocol here, which means that we are going to advertise the three networks that are on this router. One's on F0/0, one's on F0/1, and one's on loopback 0. Last, we're going to copy our configuration off of R3 and then paste it in Notepad so we can use that to edit and configure the other routers. So I've connected to my PC, and I do have the rollover cable plugged in to the console port of router 3. I'm going to open up PuTTY. We can make that full screen. And right now it looks like there is already a configuration on this router, and it's called router A (RtrA). So what I need to do is I need to erase this configuration and reload my router so I have a fresh device to work with. So the commands to do that if you don't remember are erase, startup-config. It's going to say, Hey, you're about to erase all these files, and that's completely okay. That's exactly what we want to do. And then in order for the router to erase the running config file, what we need to do is reboot the router, so we type the command reload. And it says, Do you want to reload? So Yes. Every once in a while, it will ask you a question there. It'll say, Hey, the configuration has been modified. Do you want to save it? And what it's asking there is it's saying, Do you want to issue the copy running-config to the startup-config file? And the answer to that question is No. Otherwise, you'll just undo what you just did. So you erase the startup-config file so it's blank. And then when we do reload, it may ask you that question, Do you want to save the config? And what's that asking you is, Do you want to copy the running-config to the startup-config, which is the exact thing you just erased. So now we're going to wait for the router to reboot here. We'll speed this up. We'll know that our router is booted without any startup-config file if we get this message, Would you like to enter the initial configuration dialog? And the answer to this question is always No. You on your own time can go try to mess around with that. I do not recommend it. Every time I see a student that accidentally says Yes to that statement ends up in a bit of a panic because the questions that it starts asking you are really obscure, and it tends to be a bit difficult to get out of. So if you do accidentally say Yes there, you can do Ctrl+Shift+6. That should get you out of it. If it doesn't, just reboot the device or continue through the questions until it's done and then reboot the device. Anyway, we're going to terminate autoinstall here because autoinstall and the initial configuration dialog are the same exact thing. I'm going to move pretty quickly through the configuration because we have done this before. So we're going to go to privileged mode. And what I need here is I'm going to have my drawing up at all times so I can see what it is that I'm actually configuring. And this will reduce the number of errors that I make along the way. So we'll start by configuring the hostname as R3. Next we'll put a domain name on here, ip domain-name. We'll say this is Pluralsight. com. You can choose your own domain there. It doesn't matter what it is. That information won't leave the router. Next we can create a username. We'll say username of ross password or secret is Cisco. We'll do an enable secret of Cisco. That may have a space in there, so I'm going to change that enable secret to Cisco. I don't want that accidentally to be space Cisco as the password or I'll never be able to get into my router without having to do the password recovery procedure. Now that we have this done, we can actually create our crypto key. So we'll say crypto key generate rsa, and we'll pick a modulus of 1024. And then we can set SSH to be IP SSH version 2. There we go. Now we can configure our lines, so we'll start with line con 0. On here, we're going to say password Cisco login, and then line aux 0 password Cisco login. Then line vty 0 through 4. We're going to say login local to use that username and password that we've configured. And then we're going to say transport input SSH, and that will disable telnet and enable SSH. Let's encrypt those passwords that we've configured on our lines by doing the service password encryption. And now that has completed the base configuration tasks for the router. The next thing we're going to do is configure interface FastEthernetF0/0 and 0/1. We're going to put an IP address on there, 10. 0. 0. 14 for F0/0, and the mask on there was a 30-bit mask, which is 255. 255. 255. 252. We'll do no shut on that interface and go on to the next one, int f0/1. Here the IP address is 10. 0. 0. 6 again with a 30-bit mask. You know what we forgot to do is on line con 0, we forgot to enter the logging synchronous command. So I'm going to issue no shutdown here. We'll go to line con 0 then and do a logging synchronous. Oh no. That y in there created some kind of error. Let's try to get out of there. There we go. So we'll do logging synchronous. There we go. Now it won't be so disturbing while I'm writing that configuration. So I've set the IP address on my two Fast Ethernet interfaces. I've two more steps here, and that is to configure interface loopback 0, and the IP that I wanted there was 10. 0. 99. 3. Regardless of the mask that I put on the IP address on the loopback interface, the router is going to treat it as a /32 mask. The whole address is network portion. And, effectively, what we're telling the router here is that this interface has one single IP address. Since it's a loopback interface, a virtual interface, I can't really connect the loopback interface to anything else, so it's always only going to have a single IP. So we're going to use that 32-bit mask here consistently throughout our configuration. The last step we need to do is to configure OSPF. So we'll say router ospf 10, and we're going to advertise our networks, network 10. 0. 0. 4, with a mask of 0. 0. 0. 3, which is our 30-bit mask. And then we're going to say that's an area 0. We're only going to have a single area here. We have another network of 10. 0. 0. 12, and this also has a mask of /30, so we'll use the wildcard mask 0. 0. 0. 3. We need our network for 10. 0. 99. 3, and that has a wildcard mask of 0. 0. 0. 0, and we'll say area 0. Now we have OSPF configured. What I want to do is I want to save this configuration in case my router gets unplugged or there's a power outage or something of that nature. So we'll say copy running-config to startup-config. We'll do a sho run when this is complete. And what we'll do is we'll take that sho run, and we're going to copy it to our Notepad. So we'll take that entire configuration that we just put on there, and we'll open up Notepad and paste the configuration. We're going to save this configuration, put this in a folder on My Desktop. We'll create a new folder here. And we'll call it ICND1 Lab Config. We'll open that up, and we'll call this R3. txt. And now I have my router 3's configuration saved. I'm going to make another copy of this. I'm going to save this as now my R2 configuration because what I want to do is I'm going to come back and edit my R3 configuration and use it on R2. So let's minimize that for now. We've got R3 configured. There's not much I can test on R3 right now because there're no other devices that are up and running. Let's move on to R2 and configure R2 using our configuration from R3.
Demo: Configuring R2

So let's take a look at the tasks now that we need to configure R2. So R2 is going to be our next step here, and if we look at it, we need a couple of things on here. Here we're going to configure our serial interface, as well as create sub-interfaces on F0/1. We're going to configure a loopback interface, Loopback0 having an IP address of 10. 0. 99. 2. Let's take a look at the configuration steps we need. We're going to use the Notepad to edit our base configuration. And then we're going to paste that configuration onto R2. Let's go do that. Make sure you have a copy of that drawing up at all times. So let's open up the config for R2 here that we saved. Now, remember, the config I saved for R2 is really just the R3 config. What I'm going to do is I want to delete a lot of the information that I don't type in here. So this first part, I don't ever type that into the router. My hostname for R2 is going to be R2. I don't use these boot commands. My enable secret is going to be the same. I realize that this is encrypted here, but when I paste that in there, it's going to keep that same enable secret as Cisco. We're going to get rid of this information here because I did not type that in. I did type in the domain name of Pluralsight. We did not type in this multilink information or this archive information. We did type in ip ssh version 2, but before I could type in ip ssh version 2, I have to issue that crypto key generate rsa command, and then I tell it 1024 bits to make the key. That will initiate the process to generate our crypto key, and then we can turn on SSH version 2. We'll get rid of some of these extra lines. Loopback interface now is going to be. 2 instead of. 3. If I look at my drawing, FastEthernet0/0 has an IP address of 10. 0. 0. 5, so we'll change this to 10. 0. 0. 5. And the mask on there is a /30 mask subnet. Now one of the things we're going to find out is that our interface by default is in the shutdown state. And I don't have the no shutdown command issued here. So in all of our interfaces that we want to use, we're going to have to add the no shutdown command. So I'm just going to add that in there to each interface. FastEthernet0/1--here's where we have our sub-interfaces. So I'm going to take off my config here and just issue the no shutdown command. And then what I would like to do is instead of trying to hack my way through the configuration for FastEthernet0/1 for my sub-interfaces, what I'm going to do is actually configure those separately after I paste all this information on the router. And the reason for that is is that I'm not 100% sure of all the individual commands I need to enter. So we'll leave that as a task that we need to do after we've got this base configuration pasted on our device. Now on S 0/0/0 here, right now it says no ip address, and it's shutdown. So we're going to change that to have an IP address of 10. 0. 0. 2 with a 30-bit mask, and we'll issue no shutdown before that. A lot of people ask me about this no fair-queue command. That is part of the default configuration, and my advice is don't worry about it. We don't need a configuration on Serial0/1/0. For OSPF, we need to advertise a few networks. One of them actually is the 10. 0. 0. 4 network. That's attached to F0/0. We also need to advertise the 10. 0. 0. 0 network. We don't need to advertise 10. 0. 0. 12. That's on a different router. We will need to advertise our loopback interface address, which is 10. 0. 99. 2. And then we're going to advertise the two separate networks that are attached to F0/1. So we'll say network 10. 0. 20. 0 with a 24-bit mask. And then network 10. 0. 80. 0 with a 24-bit mask again. We don't need to use these commands here. We can leave those alone for now. We'll go make sure that our line con 0 is configured correctly. Line aux and line vty--those all look good. We can get rid of the rest of those commands. And now I have a relatively complete configuration for R2. The only thing that we're going to need to do after I paste this configuration on to R2 is I'm going to need to configure those sub-interfaces on R2. Well let's copy this config to our clipboard. I do have this router all erased and ready to go, so all we have to do is paste our configuration into it. When we're pasting configurations into routers like this from Notepad, it's very important that we watch what we paste into the router or the switch to make sure that there were no errors when we pasted it. If there's an error that occurs, we're going to want to go back and fix that before we go on to configure any other routers. So I'll move into privilege mode and config t. Right now that config is in my clipboard, so I'm going to right-click to paste it. And I did notice that there was an error there when I pasted it. So if I scroll up, we can take a look here and see that my command crypto key generate was missing a t in the crypto command and, therefore, it gave me this error message Invalid input detected at that caret marker. So when we paste this, we cannot assume that everything is going to go smoothly and perfectly. What we'll have to do is go back and look to make sure there weren't errors in our configuration as it got posted. Sometimes in the process of pasting our configuration, we end up losing a few bits of data in the transfer over that serial link. And sometimes it does not show up in our config after we've pasted it. So let's go back and fix the config that generated the error message. We'll exit out of our line config and do crypto key generate and then put in our modulus of 1024. Now it's going to generate the rsa key, and now it says IP SSH version 2 has been enabled. If we go back and look, when we try to enable ip ssh version 2, we got an error message there. But after we generated our key, we did get this SSH version 2. 0 has been enabled, so we're good to go there now. Let's do one last thing. We're going to test to make sure that our router is currently connected to router 3. It's the only other router that's configured. So if we send a ping message to 10. 0. 0. 6, we should get a response, which is excellent. We get a response. What we can do now is go on and configure router 1. So let's modify our text file and config router 1 next.
Demo: Configuring R1

Let's go on to our next router here, R1, and take a look at what we need to configure for that device. And then let's go configure it. So we're going to do that router in the top part of our drawing. This one's a little bit different because we do have that connection to the internet there. So we're going to configure F0/1 to get an address via DHCP. We're going to put our loopback address of 10. 0. 99. 1, and we're going to need to configure R1 so it can connect to the internet. Let's take a look at all the steps we need to do in order to accomplish that. So our tasks here for R1 are we're going to use Notepad again to edit the base configuration of R2 to put the IP addresses for R1 on it. Next, we're going to paste that base config onto R1. We're going to configure F0/1 to get its address via DHCP. And then what we're going to do is we're going to take a look at the configuration, and we're actually going to configure then a static default route using the information acquired from our DHCP server. Last, we're going to configure port address translation here to make sure that router 1 can connect to the internet. Let's go over to Notepad and grab our R2 configuration and start to make some changes to it. So up on Notepad here, I have R2 all set up. I'm going to save this file as R3. No, we're not going to do that. We're going to save it as R1 because that is the device we're currently configuring. We'll change our hostname then to R1, leave the enable secret and all this the same. We're going to put that t in our crypto command because I forgot that last time. If we look at our loopback interface, and I take a look at our drawing, the drawing says to set that to 99. 1. Our FastEthernet0/0 interface has an IP address of 10. 0. 0. 9/30. FastEthernet0/1--the address we're going to put here is simply ip address dhcp. I'm going to leave that interface in the shutdown state, though, so that we can actually see the router getting the IP address from the DHCP server via the log message. We go down next to interface Serial0/0/0 on router 1. The IP address of that is 10. 0. 0. 1/30. Let's look at our OSPF configuration. We need to advertise network 10. 0. 0. 0, which is this line right here. That stays the same. Network 10. 0. 0. 4 is not connected to R1, but network 10. 0. 0. 8 is connected to router 1. We want to advertise our loopback interface at 10. 0. 99. 1. We're going to leave the rest off of here. So our OSPF is configured. Line con 0, line aux 0, and line vty 0 are already configured for us. So we should have a complete configuration here. Let's copy this configuration now and go to the console port of router 1. So right now I do have that rollover cable plugged in to router 1. I do have router 1 all erased and ready to go for us. So we'll say, No, we don't want to enter the initial configuration dialog. And once we can get started here, we will paste our configuration and then make sure that it was all correct and do a little bit of testing. We'll move into config mode, paste my configuration. It looks like this time my crypto key generate command worked correctly. And there we go. Let's go make sure that there were no issues here. It looks like I had an error message here. It says Error opening the tftp server at 255. 255. 255. 255, timed out. This is what happens when we boot up our router sometimes and it goes out and looks for a configuration file on some unknown TFTP server. We're going to get an error there. That's nothing to be concerned about here. We did not create that. Looks like we're getting that error message again. It's just trying to find the TFTP server that doesn't exist. So we're just going to let that error message occur and not be concerned about it. Scroll up and make sure there were no other error messages. And it looks like everything was in good shape here. So I'm going to ignore the error message for the time being. If I exit out and I do a show IP interface brief (show ip int bri) now, right now F0/1, my interface that's connected to the internet, is currently in an administratively down state. So let's move to configuration mode. And in configuration mode, let's go into interface FastEthernet0/1 and issue the no shutdown command. And what that will do for us now is it will bring that interface up because I do have it plugged into the internet right now. And hopefully in a minute, we should get an IP address. What happened is my interface FastEthernet0/1 did move to a down state, and what I did is I looked over at my router and noticed that one of the cables was loose. So I had to push that cable in a little bit further. Once I did that, it clicked, and we're good to go. I'm continuing to get this error message of trying to find that TFTP server. Again, this is something that we don't need to worry about now. This is our router trying to find a TFTP server that isn't there. And this can happen sometimes when we boot up our router, and we have interfaces plugged in. So if one of the interfaces was plugged in when I booted this router up, what could happen is the router is going to think that it's connected to the network and it can magically configure itself. It can't, and the router is trying to magically configure itself. But since there's no TFTP server with our magic config on it, it's not going to work, and we're going to get that time out message numerous times. Once I did plug my cable in on that FastEthernet0/1, my line protocol changed state to up. And then I did get my DHCP address here, 203. 0. 113. 92. So this is a very good state to be in here. If we do show ip int bri, we see FastEthernet0/1 has the correct IP address now. One of the steps that we had to do here was to create a static default route. Well if I do a show run once I can exit out of here by typing exit correctly, the x comes before the i in exit. Once I do a show run, let's take a look at our configuration quickly. Everything is set up in here, and we do not currently have a static default route configured. If I do a show ip route, though, what we'll see is that I learned a default route here, the gateway of last resort is my default route, and I did learn that default route from the DHCP server, and it's saying that my gateway of last resort or my next hop for the default route is 203. 0. 113. 89. And it did add that static route to my configuration here as the default static route. However, in my configuration, that static route does not exist. So what I want to do is manually add that static route to my configuration, and then I'm going to advertise that route in OSPF so router 2, router 3, and my 3560 switch all receive that default route automatically and I don't have to manually configure it on those devices. So I'll move into config t, and all I'm going to do here is just replicate what I've received via DHCP. So I'm going to add ip route 0. 0. 0. 0 with a mask of 0. 0. 0. 0, going to 203. 0. 113. 89 as my next hop. If I do a show ip route, nothing should change in my routing table, although something did change in my routing table. Do you notice this number right here? Do you remember what that number is? If you don't know what that number is, that is the number of the administrative distance. The administrative distance of a static route is set to 1 by default. If I scroll up in the list here, or if I scroll up in my commands, though, and look at before I configured my static route here, my static route that I learned by DHCP had an administrative distance of 254. So when I learned my default route from DHCP, it does put a static route in there, but it puts a static route in with an administrative distance of nearly the highest it can be of 254, meaning that pretty much any route that I put in is going to overwrite that 0. 0. 0. 0/0 route. Generally speaking, my config looks the same here. The next thing I want to do here is advertise my default route in OSPF. To do that, I'm going to say router ospf 10. Here I issue the command default-information originate, and I hit Enter. And what that'll do now is it'll now advertise my default route via OSPF. So router 2, router 3, and the 3560 switch all will receive that once the neighbor relationships are built up, and we're transferring routing information. In my routing table, I already see some OSPF routes showing up here, which is a good indicator. It means that I probably have something configured right on my router because I am building some neighbor relationships with it looks like R2 at this point. Now that I have my default route advertised, the next thing I want to do is configure port address translation. So, first, I'm going to go into interface FastEthernet0/1. This is ip nat inside, and that's a mistake, isn't it? IP nat inside? No, it is not. F0/1 if I look at my drawing, that is connected to the internet. So that is not ip nat inside, that is actually ip nat outside. So let's change that and just say ip nat outside, and then we'll go on to interface FastEthernet0/0, and that is going to be ip nat inside. Last, we're going to also have to do interface Serial0/0/0. That is also ip nat inside as both F0/0 and Serial0/0/0 are both on the inside-facing side of my network. If our packet traveling to the internet arrives on Serial0/0/0 or F0/0, we want R1 to recognize that that's the inside of our NAT translation and that F0/1 is our outside. Now that we have that set up, next what I'd like to do is add in our NAT statement, ip nat inside source list. I'm going to create list 1. I haven't created it yet, but we will create list 1. And then I'm going to say interface FastEthernet0/1 (f0/1) overload. Remember, the interface that we list here is always the ip nat outside interface. It's the one connected to the internet. Overload in that command is going to allow for the port address translation to take place. Now that I have my NAT rule established, the last thing I want to do here is create my access control list. I'm going to create my access control list as a standard numbered ACL. And I've already kind of set that number here. I've said the access control list is 1. So I'll say access-list 1 permit, and then I'm just going to permit the entire 10. 0. 0. 0 network. Effectively what that's going to do now is any device on the inside of my network is going to be allowed through the NAT process. If I look at the IP addressing on my inside network, the entire thing is addressed with the 10. 0. 0. 0/8 network. It's actually a smaller subset of that, but using this access control list will allow for any device on the inside to communicate with the internet. We can do a quick test of that if I do a ping to 8. 8. 8. 8 using a source of my inside interfaces, one of them, I'll do the 10. 0. 0. 1 interface, and see if we get a response. And the first one timed out there. Usually that's because of some ARP issue or other issue that's happening on the router. It's never to be a concern as long as the other four worked. If I do it again, I get all five successful pings. It looks like we're in very good shape to allow our devices to communicate with the public internet now.
Summary

Let's wrap up what we've done here. What we've done is we've built all of the router components of our ICND1 lab network, and we used Notepad to help us build those configurations. Now in the next module, we're going to do the same exact thing as we did here except now we're going to tackle configuring our switches instead.
Building the ICND1 Lab Network: Layer 3 Switch and Switches
Introduction

Welcome to Pluralsight. I'm Ross Bagurdes. In this module, we're going to build the rest of our ICND1 lab network. And we're going to focus here on our layer 3 switch and the layer 2 switches. Our goals this module are going to be the same as the last module. We're going to build that ICND1 lab network now focusing on our switches, and we're going to use Notepad to help us build those configurations for those switches. Let's just dive into it and start configuring our switches.
Demo: Configuring the 3560 Layer 3 Switch

What I'd like to do next is configure that 3560 switch. In our case, we're going to configure that switch as a router in our network. And the way I plan on doing that is I'm going to take F0/2 and F0/3, and we're going to issue the no switchport command so that those are layer 3 interfaces and will put an IP address right on the interface itself. And then for F0/1, we'll configure that as a trunk link with VLANs 10 and 15 on it. And then we'll also configure layer 3 interfaces for both VLANs 10 and 15. The loopback interface that'll apply to our 3560 there is 10. 0. 99. 4. Now let's take a look at the configuration tasks that we need to do here. So what I want to do is I want to use Notepad again to edit the basic configuration file. We're going to grab the basic configuration file from router 1 and edit it and take out all the stuff that we don't use on switches so we can apply it to the switch. We'll then paste that config on the 3560 and check for errors. We'll have to configure our VLANs. Since I haven't preconfigured VLANs in my routers, and VLANs don't usually show up in my running config file anyway, we'll have to manually configure our VLANs for VLANs 10 and 15. We'll secure our switchports here. Now since there are no PCs expected to connect to this layer 3 switch, I'm actually going to secure all the switchports by simply shutting them down. We're going to configure that trunk link on interface FastEthernet0/1, and then we'll configure the two layer 3 interfaces for VLANs 10 and 15. We'll configure ports F0/2 and /3 as 'no switchport. ' We're going to enable our OSPF routing. And, last, we're going to copy our configuration to Notepad so that we have a copy that we can use later on. Let's just move right on to our device and start configuration. Well what I'm going to do is open up my folder where I've been storing all of my configs on my workstation here. And I'm going to open up the router 1 config. And we're going to save that as the file 3560. I want to rename that file before I start editing it just in case I accidentally save that file as the R1 configuration. I don't want to lose the information I have already saved for R1. I want to create a new file for the 3560. We're going to change our hostname here. Sometimes our switches don't like just plain numbers in the hostname, so I'm going to set it to s3560 just putting the s there for switch just to give it a letter in addition to those numbers so that the hostname command doesn't error out. Our enable secret there is going to be the same as it was before. Domain name, username, all the same. Our crypto key generate command is the same. Ip ssh version 2 is the same. Our loopback interface we're going to set to 10. 0. 99. 4. Now our Ethernet interfaces, I'm just going to delete those, as well as the serial interface. We're going to configure those specifically on our router. If I look at my router ospf 10 configuration here, we need to advertise all of the directly connected networks to our 3560. So far we know that network 10. 0. 0. 8/30 is going to be connected, 10. 0. 0. 0 is not, but 10. 0. 0. 12/30 is. Additionally, we're going to set our loopback interface to get advertised as 10. 0. 99. 4. We do have two other networks that we need to advertise here--10. 0. 10. 0 with a 24-bit mask. That's in area 0. And then network 10. 0. 15. 0. Those are for the layer 3 interfaces for VLANs 10 and 20. If we continue down our configuration, we don't need line aux 0 because our switch does not have an aux port. We do have the line con 0, so we'll just leave the config as it is there. This should do it for my configuration for the 3560, at least for the base configuration. I'm going to use Ctrl+A to select everything, Ctrl+C to copy it to my clipboard. And then I'm going to open up PuTTY. I already have the rollover cable plugged in to the console port of my switch. So let's go in there. I do have this already erased, so we're going to say, No, we don't want to enter that initial configuration dialog. So if we issue the show startup-config command, it's going to say startup-config is not present. What that's indicating is that our startup-config file is not on this device, meaning the switch is blank. So, we're good to go with our initial configuration. We'll move into config t. And since my configuration is already in the clipboard, all I have to do is right-click. That will paste my configuration on there. And it looks like I just got a whole bunch of errors with OSPF. But that is okay. We'll go back and take a look at that. So let's scroll back up and see if there were any errors. It looks like hostname, everything worked okay with that. Enable secret--it did give me a message here saying that it's replacing the one command with another command. They're the same commands with the same information in them. With the username, we've got the same thing here. It says replacing the username command with this other username command. And that's also okay. It looks like our crypto key got generated correctly. We didn't really get an error message here until we got to router OSPF. And here it says IP routing is not enabled. Now we have to remember that on these layer 3 switches, they don't act as a layer 3 switch until we tell them too, and we have to actually issue that IP routing command in order to do that. So we're getting a bunch of error messages here. We'll double-check to see if any ospf config got added to the switch before we make any changes to it. Keep going down. It looks like the rest of the config has been correctly set up. It does say here that SSH version 1. 99 has been enabled. Let's just make sure that we actually get ip ssh version 2 on this device. I believe that command was entered in. If we scroll back up here, right here it is. So it did get entered in to our config. However, we're just going to double-check and verify that it actually got added here by entering it again. No harm is going to be caused by entering the command twice. Since we need to get OSPF running here, and we want this to serve as a layer 3 switch, we're going to have to enable that IP routing command. If I do a show run now, and I begin at ospf or at router ospf 10, what we'll find out here is if that configuration stuck around. Since no results came up, it means that router ospf 10, that command, is not in the configuration anywhere, which means that our OSPF is not configured. Let's go back to our text file. All I have to do here now is select the text for the OSPF config. I'll copy that to my clipboard and go back and paste it again. Now it looks like it accepted that command without any issues at all. And we have most of our base configuration done now for our layer 3 switch. The next step was to set up our VLANs. Now we only have two VLANs that we need on here, and those are connected to our trunk link on F0/1. So we need VLAN 10, and this was the voice VLAN. And then we need VLAN 20, and that was the data VLAN. Nope, I did not need VLAN 20, did I? So we'll say no vlan 20. It's easy enough to fix. And then we'll say vlan 15. That was our data VLAN. So our data VLAN here, we'll say name Data. And now if I do a show vlan, we should just see VLANs 10 and 15 that we've configured. There they are. Now that we have our VLANs configured, let's go back and secure our switchports. Now I want to see what switchports are on this switch. So I can find that out by just issuing the command do show ip int bri, and that will show me all of the switchports on here in addition to our layer 3 interfaces. Really what I'm after here is I want to use the range command to shut down all of my ports on the switch, and then I'll just turn on the ones that I need individually. So I want to do int range, and I want to do F0/1 through 24, and then I'll do space, space G0/1 space - space 2. And now that will give me all of the physical interfaces on this device. And I'm going to just issue the command shut, and that should shut down all of the interfaces. And we're going to get a bunch of messages here saying that 24 interfaces or 26 interfaces changed state to administratively down. It's exactly what I wanted to happen. Next, let's go and configure the trunk link on F0/1. So we'll switch to int F0/1. Right now if I do a show run int f0/1, it should just be the interface, and it's shut down. This is our trunk link. So what we need to do here is we need to specify our encapsulation and indicate that it is a trunk port. So we say switchport trunk encapsulation dot1q. And then we'll say switchport mode trunk. Then we'll also say switchport nonegotiate. When we do that, that turns off dtp. So now we won't be trying to automatically set up a trunk link. I want to manually add the VLANs that are required for that trunk link. So we say switchport trunk allowed vlan 10, 15. And that will allow only VLANs 10 and 15. And then I'm going to issue the no shutdown command to enable that port. So if I do a show int trunk now, I should see FA0/1 with VLANs 10 and 15 configured on them. The next step that we had in our task list was to create our layer 3 interfaces or our VLAN interfaces for the switch. We'll start with interface VLAN 10. Here we're going to put an IP address on of 10. 0. 10. 1 with our 24-bit mask. We'll do a no shutdown there. And then we'll do int vlan 15. And here we'll do ip address 10. 0. 15. 1 with our 24-bit mask again and no shutdown. Our layer 3 interfaces have now been created. The next step is going to be to configure F0/2 and F0/3 as layer 3 ports. So we're going to go to interface FastEthernet0/2. And that's the interface that's connecting to R1. Here I want to issue the command no switchport. And what that'll do is it'll convert my switchport from a layer 2 interface where I can put VLANs and port security to a layer 3 interface where I can put an IP address and configure layer 3 stuff. So no switchport means that I can now enter the command ip address 10. 0. 0. 10 in this case with the 30-bit mask. We'll say no shutdown here because right now interface FastEthernet0/2 was in a shutdown state. We'll turn that state to no shutdown, which should bring the interface up. We might even see an OSPF event here at some point assuming that everything is configured correctly between router 1 and our layer 3 switch here. We're not going to worry too much about that right now. Let's go into interface FastEthernet0/3 and get the configuration on there. Here we'll say no switchport. Actually, let's put the switchport back on there quickly, and let's see what happens when I issue the command ip address 10. 0. 0. 13 with a mask of 255. 255. 255. 252. We get an error message saying, I don't know that command. Hey, remember that message I said we were going to get about OSPF? There it is. That means that something is probably configured correctly. We're going to figure that out later actually in the next module when we do some testing with this. For the time being, let's reissue the no switchport on F0/3. We're going to do the no shutdown command. And then I'll add the IP address of 10. 0. 0. 13 with our 30-bit mask. That adds in now all of the configuration for all of the interfaces on our switch. All the interfaces except F0/1, /2, and /3 are currently in a shutdown state. I can verify that by doing the show ip int bri command, and we'll see that all the interfaces except for my VLAN interfaces, the two that I have configured, and my three interfaces on the switch are currently in the up state. Everything else is administratively down. It looks like we might have something else configured right here. We just built a neighbor relationship apparently with router 3. That's a very good sign. We can double-check that. Let's see if we can ping router 1. So we'll try pinging 10. 0. 0. 9. That's the IP address on router 1, and we get success. That's outstanding! We'll do pink 10. 0. 0. 14. That's the IP address on router 3. We also can ping that. So that's a very good sign for our router. Let's save this configuration, copy run start, and then what I'll do is I'll issue the show run command. And we'll space through the show run command. What I'm after here is I want to take this configuration that I have from my 3560, and I want to save it in that config file I created initially for it. So there's my config file. If I just have it selected in PuTTY, that means it's copied. I'm going to do Ctrl+A here, select all the text, and then I'm just going to do Ctrl+V and paste right over it so that I have the exact configuration that's currently on my 3560. We're going to save this configuration, and we can move on to our next device.
Demo: Configuring 2960-1

Let's continue on with our configuration and figure out what we need to do with this layer 2 switch 2960-1. Right now we have that switch set up so that there's a trunk link coming in from our layer 3 switch of VLANs 10 and 15. Our voice VLAN here is VLAN 10. And our data VLAN is VLAN 15. We're going to take a look at that port F0/2 in a little bit. For the time being on our 2960 here, we do have a bit of a problem. On all the other devices, I've set up a loopback interface so that we can access the device remotely via SSH and make configuration changes. However, because our layer 2 switch is a layer 2 switch, we're not really going to do routing on there. What we need to do ideally is create another VLAN so that we can manage and control that switch remotely. So what I'd like to do here is actually add a management VLAN to our 2960. The management VLAN that I'm going to add here is 10. 0. 98. 0. I'm going to make these switches' IP address 10. 0. 98. 5, and then on my layer 3 switch, I'm going to create another VLAN interface for VLAN 98, and I'm going to assign an IP address there, 10. 0. 98. 1. I did assign a /25 mask here meaning that we're going to have only 126 available hosts on that network. For this it's just fine because it's just this one single switch at this time. Maybe later on, we'll add some more switches should our design require it. For the time being, we're just going to keep that set as it is. We're going to add that interface VLAN 98 to our 2960. We're going to add VLAN 98 to our trunk link. We're going to have to go down to our 3560 and create that VLAN 98 and add it to our trunk and create that VLAN interface as well. So let's take a look at our configuration tasks here. We're going to use Notepad to edit that base configuration from our 3560 switch. And then we're going to paste it on our 2960. We're going to configure VLANs, the 10, 15, and 98 VLANs. We're going to set up our layer 3 interface VLAN 98. We're going to configure interface FastEthernet0/2 as a voice/data port. We're going to set our default gateway on our switch so that when we're trying to access the IP address on VLAN 98, the switch knows how to get back to the router. We're also going to have to do some work on the 3560. We're going to create VLAN 98, create that layer 3 interface for it, and then add it to our trunk link. We're also going to need to advertise 10. 0. 98. 0/25 in OSPF so all the devices on our network are aware of that network and can reach it should they need to SSH to it. Let's move over to our workstation and start this configuration. I've got my rollover cable plugged into the 2960-1 switch. So let's open up PuTTY and start our configuration. We're going to say No here, we do not want to enter the initial configuration dialog. We're going to move into privilege mode and config mode. Let's now go open up our config file from our 3560 switch. So I save that on My Desktop in this ICND1 lab config folder. We're going to open that up and make that full screen. The hostname here we're going to change that to 2960-1. And we're going to get rid of some of these commands that we did not enter and we don't need. Since we're not doing IP routing, and the 2960s can't even do IP routing, we'll get rid of that command as well. These exclamation points in here are nothing more than spaces in the config. If you paste those into the switch, all that's going to do is it's going to hit the Enter key, and it's going to continue pasting it. We're going to keep going here. We're going to get rid of this portion as well. Remember we have to add our crypto key generate command in here. And then the key of 1024. SSH version 2 is great there. The loopback interface--remember, we're not going to do a loopback interface on our 2960. We're going to set up VLAN 98 and interface VLAN 98 to do that. The rest of this, I'm going to actually just get rid of all the switchport config, because we'll go do that actually on the device itself, as well as the VLAN interfaces OSPF is not going to be enabled. We'll just go to our lines then, line con 0 and line vty 0 through 4. That should be all we need here. That's effectively our base configuration for our switch. Let's copy that. And here I made a mistake that I told you you should always watch out for. I'm going to save my configuration as my 2960 config 2960-1. The risk there was that if I accidentally saved it, I would have overwritten my 3560 config. That's what I didn't want to do. So I fortunately saved myself here. I was able to save it as the 2960-1 config file before I accidentally overwrote my 3560 config file. So we can exit out of here. We'll go to our config mode now and just paste the configuration. We're going to keep an eye out for any errors that pop up. This time it looks like there are no errors as we pasted that, so we're in good shape. Next step here was to configure our VLANs. And we need three VLANs on this switch. We need VLAN 10, and VLAN 10 is our voice VLAN. So I'm going to name that Voice. And then VLAN 15, that's our data VLAN, so I'll name that Data. And VLAN 98, we can name that management. Excellent! Next step here is we're going to configure interface VLAN 98 so that we have an IP address that we can SSH to on this switch. So say int vlan 98 and ip address here is 10. 0. 98. 5 with a 255. 255. 255. 128 subnet mask. It's a /25 subnet mask. Now you might be asking yourself why did I pick a 25-bit subnet mask there? Because I did. There's actually no reason why I picked the 25-bit there over a 24-bit or a 26-bit for that matter. It's just the one that I chose. Does that mean that you have to use a /25 on management networks? Absolutely not. I just chose a /25 because I did. That's really the end of it. Let's do no shut here. And we'll move on now to our next step. We're going to need to configure the trunk link on F0/1. So we'll go to interface FastEthernet0/1. We'll say switchport mode trunk and switchport encapsulation, which this switch doesn't have that command, which means that we're automatically in 802. 1 encapsulation mode. Next, what we can do here is we can say switchport trunk allowed vlan. And then we're going to put in VLANs 10, 15, and 98. And it looks like it doesn't like the spaces there in my command, so we'll get rid of the spaces. There we go. We're going to say switchport nonegotiate because we don't want an automatic negotiation on that switchport. If we do show run now of F0/1, we should see now that our switchport is set to trunk mode, and we're allowing VLANs 10, 15, and 98 on that trunk. If I do show interface trunk, we can also verify that port F0/1 has those three VLANs allowed on the trunk link now. Next, let's set up interface FastEthernet0/2. Let's get the right interface in there. There we go. So on interface FastEthernet0/2, we have a voice-over IP phone connected, and that's connected to VLAN 10. And then we have a PC connected to the voice-over IP phone. And that PC is on VLAN 15. Now if you're not certain how this works, most voice-over IP phones have a small switch on the back of the phone. And what that allows us to do is it allows us to build a trunk link from the switch to the phone and then from the phone to the PC that's just going to be an access port. And there's some magic that goes on with Cisco phones and CDP that allows a lot of this configuration to be automatically created, but we do need to set some specific configuration on that device first. So the way we do that is we say switchport mode access. I'm going to say switchport nonegotiate to turn off that dynamic trunking protocol. And now I'm going to say switchport access vlan, and I'm going to put now the data VLAN. So switchport access vlan 15, that is our data VLAN. And then we're going to say switchport voice vlan 10. That's going to indicate that our voice VLAN is VLAN 10. If we do show run int f0/2, let's take a look at what we've configured so far. We see that our data VLAN here on our access port is 15, and then this voice VLAN is VLAN 10. Now we didn't actually configure trunking here, although we kind of configured trunking here. This is a very oddball case on a switch where our switchport is configured as an access port, which means that VLAN 15 traffic will go across that link untagged. But whenever we set up that command switchport voice vlan 10, when we do that what will happen is VLAN 10 traffic will be tagged in an 802. 1 queue frame as it moves from the switch to the phone. In this way, we can separate the traffic between the PC on VLAN 15 and the phone on VLAN 10. Whenever I turn on that voice VLAN on these 2960s, it automatically adds this spanning-tree portfast command allowing that port to come online immediately rather than having to wait 30 seconds for the spanning-tree process to kick in and make sure that there's no loops on the network. When we're configuring a port for a voice VLAN like this, we're actually setting up a trunk port but it's a weird kind of trunk port because our access VLAN 15 here is untagged traffic, and our switchport voice VLAN 10, VLAN 10 traffic is tagged. And this is going to allow our voice-over IP phone to operate. The reason I bring this up is, one, it's part of the CCNA curriculum, and, two, in most modern networks, you're going to see a configuration on a switchport exactly like this. Now when you do use voice-over IP phones, typically there're a lot more commands on here related to quality of service. Right now quality of service is far beyond the scope of ICND1 material, so we're going to leave it at this. Just know that when we set this up, our voice VLAN is tagged, and the other traffic is untagged. Let's move on to the rest of our configuration tasks. We need to set our default gateway. That was one of the last steps we needed to do here. Additionally, we should probably secure the rest of our switchports. So to secure those switchports, what I would like to do is I'm going to create an unused VLAN. So we'll say a VLAN 600 is our unused VLAN. And what I'll do then I'll say interface range F0/3 through F0/24 and then G0/1 through 2. Oops! Made a mistake there. We don't put the F0 after that. There we go. And now what I can do is I can say switchport mode access, switchport nonegotiate, switchport access vlan 600, and we can even go a step further and just do a shutdown on all of these interfaces. We'll let our logging kick in here, then show us that all the switchports on our switch are now administratively down. I'm not going to enable port security on this switch. If we do a show run, we can see that our trunk link is configured and our interface FastEthernet0/2 for voice. And then all the rest of our interfaces here are in a shutdown state and on VLAN 600. That way if we do accidentally turn on one of these switchports with the no shutdown command, our devices are not automatically connected to some VLAN that we don't want used. Or it's also not connected to VLAN 1, which is right now our native VLAN, so we can't actually get traffic on to our native VLAN, which is great. The last thing we want to do here is we're going to add a default gateway, and the reason we need a default gateway here is that VLAN 98 needs a way to find out how to get traffic from 10. 0. 98. 5 to some other network. And in order to do that, we need a router. Our router is the VLAN 98 interface on the 3560. So let's add that in here. We say ip default-gateway. And then we put in the address. So this is 10. 0. 98. 1. And now our switch will have a method to get traffic on and off of the management VLAN by going through the 3560 switch. Let's save this configuration. And now let's go to our 3560 switch and configure the VLAN 98 there.
Demo: Adding VLAN 98 to the 3560 Layer 3 Switch

So I'm going to just move my rollover cable to the 3560. And we're going to hit Enter. I'm not going to close PuTTY or anything. I'll just hit Enter. It's now going to ask me to log in to my 3560. And here we'll just do the configuration tasks that we need. We need to create VLAN 98, and this was named management. And then we need to create interface VLAN 98, and that's going to have an IP address 10. 0. 98. 1 with a 25-bit mask, which is 255. 255. 255. 128. We'll issue no shut there. The next step we have to do here is we have to add VLAN 98 to our trunk link. If I do show int trunk, that'll show us our trunk link configurations. Right now interface FastEthernet0/1 is our trunk link. So let's change to that interface and add our VLAN to that trunk link. Remember, we want to add the VLAN to the trunk link, and in order to do that, we have to say switchport trunk allowed vlan add 98. If I just said switchport trunk allowed vlan 98, it's only going to allow VLAN 98, and it's going to get rid of 10 and 15. Here, though, if I do show interface trunk again, now we'll see that 10, 15, and 98 are on that trunk link. The next thing I'd like to do is advertise that network in OSPF. So what we have to do here is we go into router ospf 10, and we say network 10. 0. 98. 0 with a 0. 0. 0. 127 mask. 127 is the wildcard mask for a 25-bit subnet mask. Now our network has been advertised in OSPF. We can do a quick test here and see if we can ping 10. 0. 98. 5. And hopefully we can do that successfully. There we go. We lost the first two pings. That's happening because the ARP process has to kick in. On the switches, sometimes that ARP process is especially slow. So we lost our first few pings there. Now we can ping our 2960-1 switch without a problem. This wraps up all of our configuration tasks for the 2960-1 device, as well as the 3560 additional configuration to get that management interface working on the 2960. Let's move on to our next configuration task. Before I do that, I'm going to copy run start my configuration. And actually before we move on to that, what I'm going to do is grab the 2960 config and put it into another Notepad document. So I just move the rollover cable back to the 2960. We'll do show run, hit the Spacebar to get through the whole thing, and then I'm going to copy this configuration and paste it into a new Notepad document. We'll go to Notepad, paste it, make sure we got it all. It looks excellent. We're going to File, Save As. I'm going to call this 2960-1, and we're going to say - actual. So that's the actual config on the device.
Demo: Configuring 2960-2

Let's move on to the last device that we need to configure here. This is the 2960-2 switch. Let's look at our drawing. What we need to do here is create two VLANs on our switch--VLAN 20 and VLAN 80. Additionally, we're going to do the same thing we did on our 2960-1 switch. I'm going to add interface VLAN 97 to our switch and give it the IP address 10. 0. 97. 6. And what that means is we're going to have to add another interface to router 2. We're going to have to add another sub-interface to router 2 to accommodate our VLAN 97. Also, we're going to add VLAN 97 to our trunk link of our 2960-2 switch. Let's take a look at the tasks we need to do here to configure this switch. We're going to use Notepad to edit the base configuration file and paste it. I'm just going to go grab that same exact config file we used to paste onto 2960-1 to do for our 2960-2 switch. We're then going to configure our VLANs 20, 80, and 97. We'll configure interface VLAN 97 so we can access the switch remotely for configuration changes. We're going to configure the trunk link on F0/1 to carry VLANs 20, 80, and 97. And then we're going to set the default gateway. In this process as well, we're going to secure our switchports just like we did on the 2960-1 switch. Last, we'll set that default gateway so we can configure the device remotely with SSH from a different network than the VLAN 97 network. The R3 configuration tasks then, we're going to have to create our interface VLAN F0/1. 97 and then advertise that network in OSPF. Let's just hop to it. So I'm going to move to my workstation. Let's open up our document with the config for 2960-1. And here it is right here. We're going to save that now as 2960-2. And we'll change this hostname 2960-2. And I think that's really all I need to change here. Everything else is going to remain exactly the same. This is just our simple base config. So we'll select everything here, do Ctrl+C, and we're going to open up PuTTY. I do have the rollover cable plugged into the console port of the 2960-2 switch. It should be a blank switch here. I have it all erased and ready to go. We'll move into configuration mode and right-click in PuTTY to paste. We're going to keep an eye out again for any errors that occur. Everything looks good here. So the next step that we have is to create our VLAN. So say vlan 20, and we'll give this a name of PC since we have a PC connected to it. vlan 80, this is where we have a server connected. Our web server is connected here. So we'll name this webserver. And then vlan 98, 97 on this switch, vlan 97. And the name here is management. We're going to create our interface vlan 97. And here we give it an IP address of 10. 0. 97. 6 with that 25-bit mask. We'll do a no shutdown there. Next step, let's configure our trunk link. So we'll go to interface FastEthernet0/1 here. We're going to say switchport mode trunk. Since this is a 2960, we do not need to specify the encapsulation. It's automatically going to use 802 dot1q encapsulation. The switchport trunk allowed vlan, and we're going to put 20, we're going to put 80 and 97 on that link. And we'll say switchport nonegotiate so that we don't automatically try to negotiate the trunk link there. If we do show int trunk now, we should see that the VLANs we want configured on that link are actually configured. We're in good shape here. Let's configure the two interfaces that are connecting to the web server and our PC. We'll start with the web server that's on interface FastEthernet0/2. Here we're going to say switchport mode access and switchport access vlan 80. We're going to say switch nonegotiate. And that should be all we need here. If we do show run int f0/02, that's an appropriate configuration for our web server. If we now go to FastEthernet0/3, here we're going to do the same thing, switchport mode access, switchport access vlan 20, and switchport nonegotiate. Now F0/3 is correctly configured. What I'd like to do now is for the rest of the ports on this switch, if we do show ip int bri, we'll see all of the ports that are left on the switch for the rest of the interfaces, interface FastEthernet0/4 through 24 and G0/1 through 2. We're going to do the same config we did on the other 2960. So let's go back to my list of all the configs I have here. We'll open up the actual config for the 2960-1. And I'm going to grab this configuration here right from one of the interfaces on the 2960-1 switch and copy it. And then I'm going to paste it here. Now I did not have VLAN 600 created, so it automatically created VLAN 600 for us. And it applied the rest of the config for us. The only other thing I want to do is change the name of that VLAN so that we know that it is unused. So now we have all of our switchports that we're not using in an unused VLAN so they're not connected to VLAN 1, and we've shut down all those interfaces. Let's copy our config. Now that I've copied it, I do remember there's one last configuration task we need to do, and that is to set the default gateway. So that command is ip default-gateway 10. 0. 97. 1. That default gateway here on the switch uses the same exact concept of a default gateway on the PC, meaning that if our IP address on our switch is on the 10. 0. 97. 0 network, the default gateway is going to have to be on the 10. 0. 97. 0 network. So in this case, 10. 0. 97. 1 is our default gateway for the VLAN 97 interface at 10. 0. 97. 6. We'll do copy run start, save that configuration again. And what I need to do now is move over to router 2 and add those couple components of the configuration. So what I've done is I've moved my rollover cable to the console port of router 2. We're going to log in here. And now we're going to go to config mode and interface FastEthernet0/1. And actually I don't need to do interface FastEthernet0/1. I need interface FastEthernet0/1. 97. Here we're going to say encapsulation dot1q for VLAN 97. We're going to add an IP address then for 10. 0. 97. 1 with a mask of 255. 255. 255. 128. We'll do no shutdown here. And then last, we're going to go to router ospf 10, and we're going to advertise network 10. 0. 97. 0 with the 25-bit mask, which leaves a wildcard mask of 0. 0. 0. 127 that, of course, is in area 0. Let's do copy run start to save our configuration. I'm going to do a quick test to make sure I can ping 10. 0. 97. 6. Remember those first couple of pings may not go through, but hopefully the rest will work. There we go. So we have all of our devices with the base configuration on them now. One of the last tasks I'll need to do is to connect my web server to port F0/2 of the 2960-2 switch. I'll have to connect the PC to the FastEthernet0/3 port of the 2960-2. And I'll connect that voice-over IP phone/PC to interface FastEthernet0/2 on 2960-1. Now I'll tell you straight up, I don't have a voice-over IP phone to connect to that. We're just going to connect the PC at 10. 0. 15. 10. I'm not too worried about that voice-over IP phone on there because the configuration is more important than actually troubleshooting and supporting the phone at least for ICND1 topics for this exam.
Summary

Let's wrap up what we've worked on. What we've done here is we've configured each one of our three Cisco switches. One of those was that layer 3 3560 switch, and the other two were those two layer 2 switches, those 2960 switches. So we've built all that and configured them. And during that process, we did use Notepad to help us configure those devices. That copying and pasting out of Notepad is an incredibly valuable tool that I think you're going to continuously use throughout your career as a network engineer. Let's go on to the next section where we start to test and examine our configurations on this network.
Testing and Examining Our Network
Introduction

Welcome to Pluralsight. I'm Ross Bagurdes. In this module, we're going to test and examine that network we just configured. The goals here are to test and examine our configuration, and we're going to use ping commands, traceroute commands. We're going to SSH into the devices and issue some show commands as well. If along the way we discover any issues in our configuration, what we'll do is we will correct those issues so that our network functions as we expect it to.
Demo: Testing Connectivity to the Default Gateway

Let's first test and examine our network. So here's the network drawing that we've set up. Additionally, I've added the devices on the network. I've added 10. 0. 20. 10, and I've connected that to F0/3 of the 2960-2 switch. I've also added our web server at 10. 0. 80. 80. And then additionally, I have another device over there at 10. 0. 15. 10 plugged into port F0/2 of my 2960-1 switch. If you're wondering what these devices are, I don't actually have three separate unique devices here. What I do have are three virtual machines running on my iMac right now, and those three virtual machines function as my workstations. Those three virtual machines are connected to three separate network interface cards. I have some USB NICs that I've connected to my Mac, and those USB NICs function as the individual network interface cards for each of those three workstations. The device that we're going to test from is the VLAN 20 device down there, which is that 10. 0. 20. 10. What are we looking for, and what are we going to do? Well, let's test our connectivity by pinging all the devices on our network. We're going to trace route to some devices on our network, find out if the path we're taking to get from one device to another is accurate. We're going to ping the internet, find out if we can access resources on the internet. And then we're going to test SSH to each one of our devices and make sure that we can configure each device remotely. Next, we're going to examine our routers and switches. We're going to take a look at the routing table on our routers. We're going to examine the serial interface configurations and statuses. We're also going to examine the speed and duplex on our switches, as well as take a look at the trunk links on each of our devices that has one configured, namely the 3560 and the two 2960 switches. Let's jump in and do that. So here I am at my Windows workstation. This is the device at 10. 0. 20. 10. If I open up a command prompt, I can do an ipconfig and take a look at that configuration. Of course, it does have the correct IP address on there. Let's get started. The way that I usually do this is I just take a look at my drawing. So it's a really good idea to have the drawing for the network right in front of you while you're doing the testing. It's almost useless to do testing on a network if you don't know what you're looking at. The drawing we use here is so important because it tells me what I should be pinging. So in this case what I'm going to do is just start pinging my default gateway. If I ping 10. 0. 20. 1, we should get a response. And we're not getting a response. We're getting Destination host unreachable. Well that's a problem. And the problem there is that we cannot get off of our network here to test anything else until this is resolved. Well where could the issues reside? Well, if we take a look at our network configuration, we could have an issue with the VLAN configuration on the 2960-2 switch. It could be an issue with the trunk link configuration on port F0/1. It could be an issue with the configuration at F0/3. Or it could be an issue with R2 on F0/1. So let's take a look at each one of those in order. We're going to start with the 2960 switch to make sure that that is configured correctly. So since I can't SSH to it because I have no network access, I'm going to plug the rollover cable into the console port of that switch, and we'll open up PuTTY and take a look. So we'll log in, and let's take a look at the VLANs first. We'll do show vlan. And show vlan will tell us what VLANs are currently configured on my switch and which ones are active and what ports they're assigned to. So VLAN 20 is assigned to my PC at port Fa0/3. If I take a look at my switch physically, I can trace the cable from my PC here right to port Fa0/3 so I know I'm connected to the right interface on my switch. It looks like the web server is also configured correctly on port Fa0/2. And I can also examine that physically on the switch. Well, let's take a look then at our trunk configuration. If we do show int trunk, that will show us what is currently functioning on our trunk link. Right now our trunk link is set for Fa0/1, and we have VLANs 20, 80, and 97 on that. And that looks exactly correct. That looks exactly how that should be configured. So it appears that my 2960-2 switch is configured accurately, which means that the issue most likely exists on R2. Well, let's move over to router 2 now and see if there's anything on router 2 that can be causing the issue of us not being able to communicate or ping our default gateway. So I plugged into the console port of router 2. Let's log in. And the first command I'm going to issue here is show ip int bri. That command is incredibly useful because it tells us all of the currently configured interfaces and IP addresses and the state of each one. The first thing I notice here is that FastEthernet0/1 only has one sub-interface, and that's a problem because I need a sub-interface for both VLANs 20 and 80. And I either forgot to configure these, or at some point somehow they got deleted. Another possibility is that I just completely misconfigured them so poorly that the router didn't accept the commands that I typed in. My bet is that I just simply forgot to configure FastEthernet0/1. So let's do that now--int f0/1. 20, encapsulation dot1q for VLAN 20, and our IP address here is 10. 0. 20. 1. We need a mask. Then we're going to set up interface FastEthernet0/1. 80. We'll say encapsulation dot1q of 80, and then ip address of 10. 0. 80. 1 with a 24-bit mask. We should probably do a no shutdown on those interfaces just in case. If we now go do a show ip int bri, we should see that we have all three interfaces configured. This looks like it's much better news for us. Let's go back to our command prompt of the PC and verify. So let's see now if I can ping 10. 0. 20. 1. This looks much, much better. It appears that my interface not being configured at all was the issue that we were experiencing.
Demo: Testing Connectivity to the Rest of Our Network

Well we can do a quick test now and see if we can ping 10. 0. 80. 80, which is our web server. And we're getting a response from that as well. If we just go through now and do some more pings around our network, what I'd like to do is literally just go through and ping each IP address that we have available to us here. So I've pinged my default gateway. I've pinged the web server on VLAN 80. If I can ping the web server, I can most likely ping the default gateway at 10. 0. 80. 1, which I can. Let's see if I can ping my Fast Ethernet interfaces on router 2 and router 3. So we'll do ping 10. 0. 0. 5. That's the FastEthernet0/0 on router 2. That's successful. How about the FastEthernet0/1 on router 3, 10. 0. 0. 6. We can reach that as well. On router 3, we'll continue pinging FastEthernet0/0, that is 10. 0. 0. 14. I get a reply there. This is outstanding news. We'll keep going. We're going to do 13 now, which is our 3560 switch. Outstanding! How about the two VLANs on that switch? 10. 0. 10. 1--we can get a response from that. We'll try the 10. 0. 15. 1. Excellent! This is all good news. Lots of success here. Ping 10. 0. 97. 1--we get a response there as well. How about F0/2 of our 3560 switch. That's 10. 0. 0. 10. I didn't type that in correctly. There we go, 10. 0. 0. 10. We get a response. We'll try router 1 now. Ping 10. 0. 0. 9, and we get a response there as well. We'll try the two serial interfaces now. Those should be some of the last interfaces that I want to ping here. 10. 0. 0. 1 is Serial0/0/0 of router 1. And then ping 10. 0. 0. 2. That's our serial interface on router 2. A couple more things we should ping here. How about the 10. 0. 97. 5 interface. That is the 2960-1 switch's management address. Well it looks like I just pinged the wrong address, 10. 0. 97. 5 doesn't exist on our network. The IP address of our switch up there is actually 10. 0. 98. 5. And that we do get a response from. That's excellent! How about the other 2960 switch. That was 10. 0. 97. 6. And hopefully we can get a response from this guy as well. There we go. It looks like the first two messages timed out there probably because of some waiting around for ARP to kick in. And once that ARP kicked in, now we can ping that address as well. The one last thing that we need to ping here is we need to try to ping out to the internet. So let's see if I can actually get there. I'm going to ping Google at 8. 8. 8. 8, and that's going to verify if our NAT is working correctly. So Network Address Translation is also working here.
Demo: Using Tracert to See the Path Out to the Internet

So now that I've pinged all of my devices, found out that they're working, let's do some traceroutes. And we're specifically going to do a traceroute out to the internet here I think because if we take a look at our network, the path that we would like our traffic to take, the fastest path from our VLAN 20 device out to the internet is going to be using the Fast Ethernet links across our network. Those serial links are substantially slower than Fast Ethernet by a factor of almost 100 times slower. So ideally our traffic would flow from our PC on VLAN 20 to router 2 to router 3 to the 3560 to R1 and then out to the internet. What I can do here is I can actually do a traceroute, TRACERT, to 8. 8. 8. 8. Now before I issue that TRACERT command, I'm going to put the -d right before the IP address. What that's going to do for me is it's going to prevent my workstation from trying to resolve the IP address back into a hostname. So I'll hit Enter here. We're going to go to 20. 1, then 10. 6, then 10. 0. 0. 13, then 10. 0. 0. 9, then 203. 0. 113. 89, and then we're going out to the internet. Now this traceroute is getting us all the way to Google here. We might see a timeout here, and that's okay. It just means that one of the routers on the internet isn't responding to ICMP requests for our traceroute process. So let's start off and take a look at the first couple of transactions here. We start at my PC, then we go to router 2 at 10. 0. 20. 1. Then we go to router 3, 10. 0. 0. 6. That's the FastEthernet0/1 interface there. Then we go to 10. 0. 0. 13, that's 3560. Then to 10. 0. 0. 9, that's router 1. Then to 203. 0. 113. 89. That's the default gateway for router 1. Then we do something goofy here. You can see a little bit of the internal workings of my network that I have set up here. I'm using 10. 128. 50. 1 on my inside network for my home here. And now we see that bounce around a little bit before it goes out to the public IP space and gets to the internet. The critical component that we're looking at here---I right-clicked and something happened. Apparently, we're pasting with the right-click in the command prompt now. I'm not sure what's going on there. What we're really interested in here if I scroll back up to my traceroute are the first one, two, three, four, five hops there, and it tells me the path that I'm taking through the network. And this is the correct path through the network. It's what I expect.
Demo: Testing SSH Connections to the Layer 3 Devices and Important Commands to Remember

Let's now go and start testing SSH and take a look at some show commands that'll show us more information than we can find in just our show running configuration command. So I'll start by opening up PuTTY, and we're going to SSH to the loopback interface of router 1, which is 10. 0. 99. 1. We SSH there, and I get this message that says, Hey, the server's host key is not cached in the registry. You have no guarantee that the server is the computer you think it is. I've discussed this message before. Really all this is saying is it's saying that my workstation is not aware of this encryption key that we're going to use to encrypt traffic. So what we're doing is we're running the risk that there might be a man-in-the-middle attack happening here. But I'm not too concerned about it because, one, this is the first time I'm SSHing to the router, and, two, it's my lab environment so if there's someone that's going to do a man-in-the-middle attack on my lab network, it's going to be me. I can realistically trust that this is the right key to do the encryption. So I'm going to say Yes there, and we're going to log in. Excellent! So we're logged in to router 1. One of the most common commands we're going to issue on a router is show ip route. And the reason for that is a router is literally the device that routes traffic based upon the destination IP address, and the routing table is a list of the destination IP addresses that this router knows how to reach. If it doesn't have a specific route to any one individual network, it's going to use this gateway of last resort here, and that's my default gateway that I configured with this static route right here. Remember the word gateway is another word for router. Gateway of last resort--it's the last hope for getting our traffic to its destination. Our gateway of last resort. We're going to use that as the very last route to send our traffic. And we're only going to use that if we don't have a more specific route in our routing table. We do have all of our OSPF routes in there, so our routing table looks good. What we would use this for is we'd do the show ip route to verify to see if the route for our destination network is in the routing table. And we'd only use that if we're having troubles accessing resources on our network. When we get into the next module when we do troubleshooting, this show ip route command is going to be incredibly valuable for us to do troubleshooting. The next one I want to show you here on this router is the show controllers. And show controllers, what that's going to do is it's going to show you information about your serial interfaces. It'll actually show you information about all of your interfaces. But the one that we're most interested in with the show controllers command is the serial interfaces on our router should we have them. So if I issue show controllers as s0/0/0, it's going to tell me a lot of information. The most critical information that I need to know here and the stuff you're going to need to know for the exam is really written in these first few lines of show controllers. It's going to tell you the hardware that is used for this serial interface, as well as information about it. Here I'm using the GT96K interface, and it has an integrated FT1 CSU/DSU module. We're going to learn a little bit more about serial links in the second half of the material when we do the ICND2 material. For the time being, really all you're going to need to know for this for ICND1 is that you can use that show controllers command to see what type of interface is connected there. You'll be able to see whether the interface is a DTE end or DCE end, Data Terminal Equipment versus Data Communications Equipment. It'll also tell you the clock rate should it be configured. Here since I'm using this integrated module, I don't have the clock rate set. It's set automatically by the system. And I don't have a DCE or DTE end just because of the type of interface that I'm using. For the time being, you do need to know what show controllers Serial0/0/0 does, and it's going to show you what hardware you're connecting with on that serial interface. We may also issue the command show int f0/0. What this will show us is information specific to the interface itself. It shows us the hardware that we're using and the MAC address on that interface. It tells us the status of the interface in the very first line. It tells us the IP address we're using, as well as the parameters set for Ethernet. So we have our maximum transmission unit, our bandwidth, delay of line, among other things. It tells us the duplex and speed setting of our connection. It also gives us a list of statistics about that interface, and it will list for us the errors that occur on this interface. And we can use this information sometimes to troubleshoot connections. So if we do a show int f0/0, and we see these runts or giants, a runt is a frame that's too tiny, a giant is a frame that's too big, if we see an input error, meaning it couldn't read the frame header, a CRC error, maybe we're getting errors where we were not able to successfully verify the integrity of the frame, meaning the calculations in that frame check sequence field, the FCS field of our frame, which is at the very end of the frame, that FCS value did not match the calculated value we did on the router. So we'd see some CRC errors here. So we can look at the errors using that show int command. A very, very useful command is show ip int bri. That may or may not be on the CCNA, but the important part here is that show ip int bri on a router tells us all of the interfaces, their IP addresses, whether they're up or down, as well as how they were configured. This NVI0, that's a NAT Virtual Interface. That NAT Virtual Interface is given the same IP address that we use on one of our inside links here, so it uses the same IP address it had on FastEthernet0/0. That NAT Virtual Interface is used literally to do the NAT translations when we're trying to get out to the public internet. Let's move on to the next device and take a look at some commands there. We're going to test SSH. We'll look at the routing table and other information on a few of these devices here. So I'm going to close out of router 1, and we're going to open another PuTTY session. We're going to go to router 2 this time. We'll type in 10. 0. 99. 2. And I have to type that in correctly obviously. You realize I cannot type, and I've made a career as a network engineer and instructor typing commands into routers. Clearly I make a lot of errors, but not enough errors to make me unsuccessful at it. So let's keep going here. We'll say login here. Go to privilege mode. It looks like my router is set up correctly here for SSH. I'm able to access it. If I do a show ip route, we can take a look at our routing information. Here we also have a gateway of last resort set. And the gateway of last resort here is different than the gateway or last resort on router 1 for very good reason. On router 1, our gateway of last resort was our next hop to the internet. And we told router 1 via OSPF's default information originate command, we told OSPF to take that default route and tell the other devices about it. So here the gateway of last resort is 10. 0. 0. 6. 10. 0. 0. 6 is router 3 over our Fast Ethernet interface. So if we look down at our routing table, we can see that we learned our default route from OSPF. How do I know that. Well, this letter O indicates that we learned that route via OSPF. So we're learning our default route from OSPF. This is exactly what we wanted. And now this router has a path to any network that we want. If the network is not listed directly in the routing table, we're going to use that default route as the primary route to reach that destination or at least attempt to reach that destination. On router 2, we have that serial interface here as well, so we can do show int controllers s0/0/0. Excuse me, that's show controllers s0/0/0. Well, we'll get it eventually. There we go. And once again, this is telling me that my hardware interface here is this GT96K with integrated FT1 CSU/DSU module. This is what you need to know, what the show controllers command does here. This is just the other end of the serial interface that's connected to router 1. Any time we're in the show commands and you want to stop looking at them, you can issue the Ctrl+C command, and that will stop the command where it's at and exit back to privilege mode prompt or config mode prompt depending upon where you're issuing the command from. All this other information looks like gibberish. And for all practical purposes for CCNA level materials, it is gibberish. We don't need to know what's going on here. We might be able to use this information for much more sophisticated troubleshooting with serial links. Typically when we're at that level, we're calling the Cisco technical assistance center, or TAC, instead of trying to fight through all of these little nuances and numbers in this table. If you actually issue the command show controllers and look at the whole thing, there's a lot of gibberish there. And we don't need to be concerned about that. We just need to be concerned about that first part of the command here to take a look at what interface hardware we are using. We can do show ip int bri, and that will show us the interfaces again. Another command we can issue is show ip protocols. And show ip protocols, what that'll do is it'll show us the routing information that's currently enabled. It'll show us the routing protocol information and what networks we're currently advertising for. So this can be a very useful command when we are troubleshooting OSPF issues or any routing protocol issues for that matter because it tells us the router Id, and it tells us the networks that we are currently advertising. Let's try SSHing now into router 3. I'm going to close out router 2 and open up another session here for router 3. Now I'm closing out the sessions only to keep my screen nice and clean so that we can evaluate each one of these routers individually. When you're working with a network like this, and you're doing troubleshooting, oftentimes you may need to have more than one SSH session open. That's completely acceptable to do. So we'll log in here to router 3. I'm going to do show ip route. And our routing table looks good here. We can see that once again we learned our default route by OSPF. Here on router 3, we don't have our serial interfaces. That doesn't mean we can't do show controllers. We can just do it for FastEthernet0/0. And here it'll tell you the same thing. It tells you the type of hardware that we're using. But, again, this is well beyond the scope of the CCNA material. You just need that show controllers command for your serial interfaces. Show ip int bri will show us the states of our interfaces. It looks like SSH is working correctly here, and everything else looks fantastic. I'm going to open up a new PuTTY session. This time we'll leave that session open to 10. 0. 99. 3. Now we're going to SSH to our layer 3 switch, the 3560. We can SSH to any IP address we want here. I'm going to SSH to our management VLAN interface here, which is 10. 0. 98. 1. And that brings me to the 3560. Now since we're on a switch, we have different commands that we can issue here. So we can certainly issue a show ip route on this 3560 switch because we're using it as a layer 3 switch, which means it's a router in addition to a switch. Here we can see again that our default route was learned via OSPF, and it appears that we have a complete routing table as well. Additionally on the switch, we can issue the command show int trunk. Show int trunk will show us information about the trunk link configuration. It'll tell us what VLANs are explicitly allowed on that trunk link. On 3560, we can also do show ip int bri. What'll happen here is it's going to show us the IP addresses on our VLAN interfaces, which are virtual interfaces or SVIs, Switched Virtual Interfaces. It shows us the IP addresses on our ports where we have issued the no switchport command. The rest of the interfaces here, it looks like they're in an administratively down state, meaning that we have issued the shutdown command on those interfaces, although in FastEthernet0/4, nothing is assigned to it, and it's unset. Let's take a quick look at that interface. So the command that we use to look at just the config for one interface is show run, and then we say int and then the number f0/4 here. Well it looks like there's a configuration on there for a voice VLAN configuration. And the voice phone is connected to the 2960-1 switch. So what I'm going to do actually is go fix this quick. We do not want port F0/4 of our switch to have this configuration on it. It should have the same configuration as FastEthernet0/5, which is simply that it's shut down. So we can fix that by going into config t, and if you didn't catch it, the reason that I'm fixing this is that I don't have a voice phone connected to port F0/4 here. In fact if I look at my drawing, I don't have anything connected to port F0/4. So ideally I want to do something here that will allow me to prevent a device from connecting on that interface when it shouldn't be. So we're going to say default int f0/4. And what that will do is it will reset that interface's configuration back to its default state. If I do show run now int f0/4, you can see that our config now has been completely erased. It used to have all of this information on it, and now it's completely gone. Now we can say int f0/4 and issue the shutdown command. And now if I do my show ip int bri again, now we should see that FastEthernet0/4 is now in an administratively down state, which is the correct way that it should be here. We did set a loopback interface on our layer 3 switch as well. So I could've used that to SSH to the switch. I chose to use the 10. 0. 98. 1 address. Either address should've worked fine here. As a matter of fact, I can open up another PuTTY session and SSH to 10. 0. 99. 4. And, again, we are going to be able to access the 3560 switch. Which is better here? Neither. They're both exactly the same. We're accessing the same device. We just happened to be SSHed into the same device twice. One other thing that you should know here is that when we're SSHed in, you should notice that we were not getting any messages saying, Hey, this interface went up; this interface went down. And we can change that by issuing the command terminal monitor. And what that'll do is it'll force all of those log messages that we're used to seeing when we are in the console port, it'll force those all to display on our screen here in SSH. So I can verify that by going to config t and then exiting. And it should pop up a message saying, Hey, somebody just tried to configure the device from line vty0. And this dude is named Ross. So it tells you the username of the person logged in to SSH and what vty line they're currently connected to, as well as the IP address that I'm coming from. So my IP address of my workstation here is 10. 0. 20. 10. And I'm SSHing to this 3560 switch. So the terminal monitor command will get those messages to pop up on your screen. Sometimes that's useful if you're bringing interfaces up or down or you're making changes.
Demo: Testing SSH Connections to the Layer 2 Devices and Important Commands to Remember

We have two more devices that we need to SSH to and do some checking on. Let's go to our 2960 switch. So go to 2960-1. The IP address there is 10. 0. 98. 5. We'll log in. Go to privilege mode. Now on my 2960s, the show ip route command isn't going to work. And the reason there is I don't have a routing table, at least not the same kind of routing table that I have on my 3560 switch. That 3560 switch is a layer 3 switch. The show ip route command just won't work here. We can do show ip int bri, and that will show us the same information that we saw in the 3560. We're going to see our svi interfaces. Here we have VLAN 98 configured as our switched virtual interface, that's our management interface. We can see that FastEthernet0/1 and 0/2 here have some kind of configuration on them. It looks like FastEthernet0/2 is in a down state. So let's check to see if my workstation is unplugged. If I look over at the switch, I do see that right now my cable is not plugged in to the switch. So what I'll do is go back and issue that terminal monitor command. And now I'm going to plug in my switch to the workstation. And hopefully if we've done it correctly, we should see a message on here saying that the state of the port changed. So this is exactly why we would want to use that terminal monitor command so that we can see changes that we're making on the switch and see the logging messages that show up. So if I do show ip int bri again, now we'll see that interface FastEthernet0/2 is in the up state. So that'll show us the layer 2/layer 3 information. We can also do a show int status. And show int status will show us the layer 2 information about this switch. So FastEthernet0/1, that is currently connected, meaning it's up. It's configured as a trunk link. And then the duplex and speed here are set both automatically, that's what the a means, to full and 100. So it's set to 100 mbps full duplex. And like I said, that a means that it's set automatically. The last field here, the type field, that field is indicating what type of interface this is and what its capabilities are. Here it's saying it's a 10-MB or 100-MB Ethernet interface. The BaseT indicates that we're using twisted pair cabling to connect it. That's the category 5 or category 6 cabling with an RJ45 end on it. The rest of our interfaces here we can see are disabled, meaning that the shutdown command has been issued, and that these interfaces should we move them to a no shutdown state, they're going to automatically negotiate the speed in duplex. If you remember from one of the switching courses, we did take a look at these speed and duplex settings. And sometimes we need to modify those especially for older gear that has a very old NIC on it. A lot of times those will only operate at 10 MB half duplex, and you have to actually force the interface to be 10 MB half duplex in order for it to work. Oftentimes it won't automatically negotiate. Using the show int status is a very quick way to see how those interfaces are currently configured. You may notice on Gi0/1 here and Gi0/2, there's some unusual configuration there especially in the type of the interface. On Gi0/1, we have 1000BaseSX SFP. Well, what I'm looking at there is on my 2960-1 switch, I have two extra ports on that switch. Those two extra ports on the switch are used oftentimes to connect to other switches or up to a router. Here what I have is I've plugged in a laser into the port Gi0/1. So there's a slot in there called an SFP port, which is a small form pluggable, SFP. It's a little tiny network interface card. Usually we use lasers in there. The SX indicates that it is a multi-mode laser. S, short-haul for multi-mode. L if it was a 1000-base LX, that's long-haul for multi-mode. At least that's how I always remember the S and the L in my SFPs. And we can see that on Gi0/2, I just don't have an SFP plugged in there. I can also get an SFP that is a Gigabit Ethernet connection using the 1000-base TX so that I can actually plug in an RJ45 connection into there with category 5 or 6 cabling. We can also get this information by issuing the show int command. If I do show int f0/1, it tells me a lot of information including, again, any errors that are occurring on that interface. And those errors, looking for those errors, we don't necessarily need to know what all the errors mean, but we do need to know that if you see this input error or CRC errors, if you see those numbers that are relatively high there, chances are something is up. And if those numbers are high, usually it's an issue with a cable or it's an issue with a network interface card on the workstation. So those are two things that you'll need to look at should you see a lot of errors there. Show int trunk will show us information about the trunk link. It'll show us what VLANs are currently configured on that trunk link. And show vlan will show us all the VLANs that are configured, as well as what interfaces they're assigned to. Ideally, we have VLAN 1, the default VLAN here, not having any ports in it at all. Let's do one more switch here. Let's go on to our 2960. So here we'll go to 10. 0. 97. 6. We'll log in here. And just like 2960-1, we can do the same types of commands--show ip int bri. That should show us all of the ports and what their current configuration is. We can do show int status, which should show us what's connected and what VLANs they're on or if it's a trunk link, as well as the speed and duplex settings and the type of interface that it is. On the second 2960 switch, my Gi0/1 interface, I do not have an option with the SFP ports, those small form pluggables. What I do have is I have a physical interface on the switch that's a Gigabit Ethernet interface that allows me to plug a category 5 or 6 cable with an RJ45 end on it into that interface. And, again, I usually use those as my trunk links. However, in this case, I'm simply using F0/1. Does it matter which we use? Well, it depends upon your environment. Since this is a lab environment, it doesn't really matter which I use because I'm not concerned about overwhelming the trunk link between my switch and the router. Additionally, my router only has a Fast Ethernet interface on it, so even if I did use the gig interface here to connect up to my router, It would make no difference. It would still negotiate at 100 mbps.
Summary

To wrap up what we've done here, we tested and examined our lab configuration using ping and traceroute from our PC. We also made some configuration changes that we found along the way. Initially we weren't even able to ping anything on the network from 10. 0. 20. 10 because for whatever reason, the FastEthernet0/1 sub-interfaces of. 80 and. 20 were not configured. So we added those in there to make our network work, and we did some testing with it. And we went in and took a look at a lot of those configurations using those show commands. In the next module, what we're going to do is add some services to the network. Namely we're going to add port forwarding Network Address Translation so that somebody on the internet can access our web server on the inside. And, additionally, we're going to put an access control list so that when we do access that web server from the outside, we're only going to access it on port 80 and nothing else. I hope you enjoyed watching. Let's move on to our next module.
Adding Services
Introduction

Welcome to Pluralsight. I'm Ross Bagurdes. In this module, we're going to add some services to our network. Our goals here are going to be to add port forwarding Network Address Translation so that a device on the internet can access our web server at 10. 0. 80. 80. Additionally, I want to create an access control list to protect our web server so that we're only allowing traffic on port 80 to reach that server. And what that'll do is it'll help protect the server from attacks on port numbers, TCP port numbers, that aren't port 80. We only need port 80 for this web server to work, so we're going to block everything except port 890.
Creating Our Access Control Lists

Let's take a look at adding services now. What we'll need to do here is we're going to need to add a port forwarding NAT rule on router 1 to allow the web server access on VLAN 80 at 10. 0. 80. 80. Additionally, we're going to add that ACL to allow access only to our web server on port 80. Let's take a look at our drawing. Now on router 1, we're going to have to apply our port forwarding rule to router 1, and it's going to be using the interface FastEthernet0/1 IP address. That's the one that we learned via DHCP. So when we set up our port forwarding rule, we're going to use that interface as the IP address that a user on the internet would access our web server on. Now when we're building the access control list, we have options here. If you remember based on the rules that Cisco wants us to follow, we put standard access list as close to the destination as possible, and we put extended access lists as close to the source as possible. My rule if you remember was that we put the access control list where we need to put it. So do we want to put that access control list on router 1? Well we could certainly do that. And that would not be inadvisable, although putting that access control list on F0/1 of router 1 actually does make that a little bit messy because we have to account for other traffic that's going in and out of our Fast Ethernet interface there. And what we need to do is actually use something called a reflexive access list to get that device to work as we would expect it to. It's a bit beyond the scope of this course. So we want to examine this a little bit differently. So instead of putting that access control list to filter our traffic before it gets into router 1, what I'm going to do instead is put our access control list on F0/1 of router 2. And we can't just apply it to F0/1. We'll have to actually apply it to F0/1. 80 because that's our VLAN interface for the 10. 0. 80. 0 network. We're going to apply that in the outbound direction. So we're going to apply that access control list as traffic leaves FastEthernet0/1. And the idea that I have behind this is that we want to filter the traffic getting to the web server so when we put this access control list on F0/1. 80 going in the outbound direction, what that'll do is it'll allow only port 80 traffic to flow to our web server regardless of the device that's accessing the web server. So it won't matter if we're out on the internet or on our internal network, we're only going to be able to communicate with 10. 0. 80. 80 on port 80. Let's take a look at how we construct that access control list. So here we go. We have our network Everywhere on the right, and we have traffic flowing from Everywhere or anywhere on the network or internet flowing into our device at 10. 0. 80. 80. When I write my access control list, we're going to use that same chart that I set up in the access control list course, and then we just start building our ACL rule here. So we want to permit some traffic. And the protocol we're going to permit here is TCP. HTTP uses TCP at the transport layer. The source IP address can be anything because the traffic is coming from anywhere including the internet. We will have no idea what the source port is. The source port could be anything because that's going to be an ephemeral port as traffic moves from Everywhere, the source, to the destination of 10. 0. 80. 80. Our destination IP address of course is that same address, 10. 0. 80. 80, and the destination port here is the port number of the HTTP server, port 80. After that, we want to deny everything else. We don't want any other traffic getting to that web server. We can use this now to write our access control list, so we have our access control list that's extended. We're going to use a named access control list here, call it WebFilter. We're going to say permit TCP any source address with a destination of host 10. 0. 80. 80 with a destination port number of 80. Our second line there, deny ip any any, which will deny the rest of the traffic. So let's look at our tasks. We're going to configure port address translation on router 1. We're going to test access to the web server from the internet. And we're going to do that before we apply our access control list. Next, we're going to configure our access control list on router 2. And then we're going to test access to the web server from both the inside network, and then we'll test again from the outside internet network as well. Before we go configure that device, I want to point out a few things. First, there's a rule in Cisco land that says that we always apply extended access control list as close to the source as possible. Well if I did that here, it means that I would have to apply an access control list to every single interface that has a network device connected to it that might want to reach the web server, as well as R1's FastEthernet0/1. So I'd have to apply an ACL to router 1, F0/1. I'd have to apply an ACL to interface VLAN 10 and interface VLAN 15 of my 3560. Additionally, on router 2, I'd have to apply another access control list on F0/1. 20. And what that would do then is I would have that access control list, the extended access control list, and I would have that applied to all the devices nearest to their source. The issue with that is now I have to manage three access control lists, actually four access control lists, and every time I add another network to this system, I will have to add another ACL to do the same exact thing. So in this case, I'm actually putting my extended access control list as close to the destination as possible so that I only have to manage one access control list, and effectively what I'm doing is creating a DMZ on R2. And that DMZ on R2 allows me to filter the traffic going just to the web server, and it allows me to only filter based on port 80. So this is one of those cases where Cisco's rule doesn't actually apply to our network. We put the access control list where we need to put it. The second thing here is in order to do this testing, what I'm doing here is I'm moving my workstation that was down on VLAN 20, I'm taking it off of switch 2960-2, and I'm going to hook it up to my internet and connect it to IP address 203. 0. 113. 94. And what this will allow me to do is test my port address translation, as well as test my access control list on R2.
Demo: Configuring and Testing Port Address Translation

So here I am on my Windows machine. If I open up a command prompt and do an ipconfig, we can see that I have IP address 203. 0. 113. 94. If I send a ping message to 203. 0. 113. 92, which is the DHCP acquired address of R1, we'll take a look at that in a moment, we do get a response from that device. If I go open PuTTY now, I do have the rollover cable plugged in to router 1 this time. So we'll open up PuTTY and log in here. If I do a show ip int bri, we'll see that 203. 0. 113. 92 has been assigned to FastEthernet0/1. We can see what mask is applied to that by doing show int f0/1. And here we'll see that it has the 29-bit mask. This also shows up in the routing table. Show ip route will show us that 203. 0. 113. 0/29 actually what this is saying is that the class C address 203. 0. 113. 0 has a /29 mask, and the network that we received here for that on that interface is 203. 0. 113. 88/29. Let's move on and configure our port address translation. So I'll move into config mode. And here want I want to do is I'm going to add a NAT rule, and the NAT rule is going to be a static NAT rule, so it's ip nat inside source, and we're going to say static here. And then if I hit question mark, it's going to say, well, what are we going to do here with the static translation? Since we're only doing this port forwarding, we're going to use TCP as our protocol. It wants to know the inside local IP address now, and that is the actual IP address of our web server. It then wants to know what is the local port, what's the inside port number? And we're going to use port 80. Then if we hit question mark, it's going to ask either for the inside global address, which is our public address, or we can specify an interface. If we specify the interface, what we'll do here is we'll allow the router to adjust the NAT rule should that dynamic address that's currently configured on FastEthernet0/1 change. So if our ISP decides to give us a different IP address for our outside interface, we can just simply use the interface FastEthernet0/1 here as the outside IP address or the global IP address for our inside server. And then it'll automatically change as that outside address changes. The last thing we need to do is tell it what port number to use on our outside interface, and that's going to be port 80. That should be enough so I can get access to the web server via my public address. So if I open up my Chrome browser, and we'll do a Ctrl+Shift+N to get an incognito window, and we're going to browse to 203. 0. 113. 92, which is the IP address of the outside interface of my router. And hopefully here we'll get the website at 10. 0. 80. 80. So this is outstanding news. This means that my port address translation rule is working.
Demo: Creating and Testing the Access Control List

The second thing we're going to do is create that access control list. And I did not apply the access control list at the same exact time that I applied the NAT rule because if I did those at the same time and it didn't work, I would have no idea which one was broken. So when I do this, I'm first going to test to make sure that my port address translation is working. Once I get that working, now I can go on to router 2 and create and apply the access control list. So let's close our web browsers here. We're going to save the config on router 1. So we'll do a copy run start. And then I'm going to move my rollover cable over to router 2. We'll log in here. And now we're going to create that access control list we talked about when we were looking at the slides. So I'll move into config mode. We're going to create that ip access-list extended, and we call it WebFilter. Then that rule, the rules that we have on it, were permit tcp with a source address of anything. We don't care about the source port number because that will be ephemeral. Our destination address is just one single device, 10. 0. 80. 80, and it's going to have a destination port number of 80. The second rule here is going to be deny ip any any. Now we just created the access control list, but it's not applied anywhere. So when we configure the access control list when we apply it, what we need to do is we need to go on to our sub-interface. So we're going to go to the sub-interface where we want this applied, which is int f0/1. 80. And we'll apply that. We want to apply that in the outbound direction so that we're filtering traffic as it leaves FastEthernet0/1. 80. So we say ip access-group WebFilter outbound. We'll exit out of here. Let's save our config. And then we can do one more test. Let's open up our web browser again. We'll do a Ctrl+Shift+N so we can get that incognito window. And we'll browse to 203. 0. 113. 92. And hopefully we'll be able to get to the website. We can still get to that website via our NATed address on the outside interface. This is outstanding. This is exactly what we've been expecting. I would like to verify one other thing though. What I'd like to verify is that I can reach that website from my internal devices. And then what I also want to test is to make sure that I can't do other things to my device at 10. 0. 80. 80 like ping it because a ping message should get denied. But right now since I'm doing port forwarding on the outside interface, I won't be able to ping because I'm only allowing TCP port 80, ICMP does not use TCP. ICMP is a layer 3 protocol. So we're not going to be allowing ICMP through our router via that NAT process. So let's move my workstation back to the switch 2960-2. So I do have that workstation plugged in to my 2960-2, so let's change our IP address now. We have to change back to the VLAN 20 network, which is 10. 0. 20. 10. And our default gateway here is 10. 0. 20. 1. We'll hit OK. Close these windows. Let's close everything out here. We're going to make sure we can ping, so say ping 10. 0. 20. 1. We can get to that. Let's see if we can ping 8. 8. 8. 8, which is out on the internet, that's the Google DNS server where NAT is still working on our router 1. That's great! Let's see if we can ping 10. 0. 80. 80. If our ACL is configured correctly, this should fail. And we do get a message from our router saying Destination network is unreachable. If you were to capture this in Wireshark, you'd find out that that destination network unreachable message actually is saying that there is a filter applied to the network, and that is not allowing us to pass the traffic. If you want to learn more about that, I have a course on troubleshooting with Wireshark called Fundamental Protocol Analysis. In there we go through a deep dive of how all the ICMP messages work, and we examine it in detail in Wireshark. The one thing we have left to test on our ACL now is to see if we can get to that website from our inside network now. So I'll do a Ctrl+Shift+N to do that incognito window, and I'll browse now to 10. 0. 80. 80. Since I'm in the inside network, I won't be able to browse to the 203. 0. 113. 92 address because NAT doesn't work like that. NAT only works when I'm coming from the outside interface in using that public IP address. When I'm inside the network, I have to use my private IP address. And it looks like my ACL is configured correctly because I am able to get to the web server. I can verify that one other way. If I open up PuTTY, and this time I can actually close out my session here to router 2. I want to SSH into router 2 now just to verify that SSH is working yet. So we can SSH 10. 0. 20. 1 or 10. 0. 99. 2. Both of those will work. I'll log in as ross. And what we can do is issue the command show access-lists, and what that'll do is it'll show me my access lists, and it'll show me the number of times that the access list rule had a match on my first line here. And it'll tell me the number of times my access control list had a match on the deny ip any any. So this is evidence that my ACL is working correctly. If I try to send another ping message here to 10. 0. 80. 80, and I go back and look here, we should've seen these matches increase by at least 4 messages. So we'd actually increase by 8 messages. So we can see our ACL in action here on our router by issuing that show access-lists command. Let's wrap up this module so we can move on to the next section where we do some troubleshooting with our network.
Summary

So to wrap this up, we added port forwarding Network Address Translation for internet access to our web server at 10. 0. 80. 80. And then we tested that from a device out on the internet. Additionally, we added the access control list to protect our web server on FastEthernet0/1. 80 on router 2. We applied that ACL in the outbound direction. And then we tested that ACL by trying to browse to our website from the internet, as well as going on the inside of our network and trying to browse to that website from an inside device. Additionally, we tried to ping our web server and found out that ping messages are not allowed through our access control list and, therefore, they're denied. I hope you enjoyed this module. Let's go on to the next one where we do some troubleshooting of our network. I'm going to break some stuff, and then we're going to fix it.
Troubleshooting Our Network
Introduction

Welcome to Pluralsight. I'm Ross Bagurdes. This next module we're going to do some troubleshooting. What I've done is I've created some bad config files for each of the devices, and I've uploaded those to the download section of this module. So if you are interested, you can set this network up yourself. You can load on all the bad configuration files that I have put in that downloads folder and then do your own troubleshooting of this network until you figure out what's wrong. Should you get stuck or want to know how to solve the issues that I've created in that network, were you can come back and watch the video, and I'll step you through each device and show you how I'm troubleshooting and solving the problems based on the complaints users are experiencing. The goals for this module are really to just do some troubleshooting of network issues that I have created for you. In that downloads section, I have put both the broken config files and the correct config files for each device. So if you want to play the game and do some troubleshooting on your own here, you might have some fun with this by putting all those bad configuration files on your devices and trying to do some troubleshooting on your own. Come back here, and I'll show you how I solved each of the problems. Hopefully you'll learn something about how to walk through and solve network issues in a data network system like we have here for our lab network. Let's get started.
Demo: Troubleshooting SSH Issues on a Switch

Once again, here's the network that we're using. This is the same network that we had all along. And what we have right now is we have a user complaining, the user that is at workstation 10. 0. 20. 10. That user's complaining that they're having slow access to resources internally, and they're unable to reach the internet. Let's move on to that device on VLAN 20 and start our troubleshooting and see what is wrong with our network that's preventing our traffic from flowing. While we're working through this, I highly recommend having this drawing right next to you so that we can consult it as we need to to figure out what might be broken in our network. Let's go troubleshoot that slowness complaint that our user at 10. 0. 20. 10 is complaining about. So I'm going to open up a command prompt. The issue here again is that our user is complaining about some slowness accessing network resources. So we're going to see if we can figure out what is happening for our user here. Additionally, this user was saying that they were unable to ping the internet and unable to access internet resources. So we're going to look at that as well. We'll start with the slowness issue. And one of the things we can look at with slowness is we can SSH to our switch 2960-2 and find out if there are any errors on the port F0/3, or possibly F0/3 was misconfigured. So I'm going to SSH to our switch there, which is at 10. 0. 97. 6. And we'll let that work. And something's not working. It doesn't look like SSH is working to that switch right now. Let's see if we can ping the switch's IP address because if I can't SSH to it, that could be lots of things that are wrong. SSH is an application layer protocol, so what I can do is I can send a ping message to 10. 0. 97. 6 to see if I get a response. And then we'll be testing network layer connectivity. So we're going to skip over the transport layer test and go right to the network layer test here by doing a ping to 10. 0. 97. 6 to see if we get a result. And it appears that we are not getting a response from that address. Well what I would do next then is see what is it that I can ping on my network. If I can't ping the switch that I'm connected to, what is it that I can ping on my network? Well if we're looking at this, the switch that I'm connected to has that IP address 10. 0. 97. 6, but my workstation is on 10. 0. 20. 10, which means I have to send the traffic to my router before the router can forward it on to the switch. So what I would do in this case is see what is it that I can ping, and I would start with my default gateway for the 10. 0. 20. 10 network. So let's ping that, 10. 0. 20. 10 or 20. 1 here, that's the default gateway for the 10. 0. 20. 0/24 network. And here I do get a response. So since I get a response from my default gateway, this is really good news. It means that my messages are leaving my workstation and getting to the router and back again. The second thing I would do now is see if I could ping the very next address in my path to get to network 10. 0. 97. 0/25, and that address would be the default gateway for the VLAN 97 network, which is at 10. 0. 97. 1. That is the default gateway for that network. That IP address is on R2. So if I can ping that address, which I can, it tells me that the layer 3 interface for VLAN 97 is functioning correctly. I can't ping the switch, but I can ping its default gateway. So what I would check on next now is I would SSH to router 2 and see if router 2 has any information for me about what could be wrong here. So we'll close my PuTTY window that I had opened before, and I'm going to create a new PuTTY window here. And we're going to SSH now to 10. 0. 99. 2, which is router 2's layer 3 address. And here we also have an SSH error that says Server unexpectedly closed the network connection. Now I've put these SSH errors in here explicitly because this is a common issue with newbies configuring devices. They make errors in the SSH configuration. There're numerous steps to get SSH configured. So it sometimes makes sense that we have errors here when we're trying to do the configuration. So now we're stuck a little bit. We have this user that's complaining about slowness, and I can't SSH to the router to check on any router configuration, and I can SSH to the switch to check on any switch configuration. So what am I going to do now? Well, what I'm going to have to do is actually get on to the console port of those devices. Connecting to our devices with a rollover cable requires us to be within a few feet of the device that we're configuring. Now when we're working on a data network, this isn't always the case. Usually we're sitting at a desk that is many miles away or at least hundreds of feet away from the device that we are trying to access. It's the whole reason for putting SSH on devices so that we can access them remotely. So when we have this occur when we have a device that we can't SSH to, it often requires us to jump in our car with our laptop and a rollover cable and actually sit right next to the device to plug into it. For now fortunately my lab is literally a foot or two away from my arm, so I can just plug my rollover cable right into my switch without any issues. So I've connected to 2960-2. I'm going to open up PuTTY, and we'll start with our 2960 and see if we can figure out what is wrong with our 2960 and why we can't SSH to it. So it looks like the switch is online. And our switch was passing traffic for us because, remember, I sent a ping message from the workstation at 10. 0. 20. 10 to my router at 10. 0. 20. 1, as well as 10. 0. 97. 1. So while I'm on my switch now, let's look at a few things. First of all what I want to see is is the interface VLAN 97 configured? So if I do a show run int vlan 97, it shows me that VLAN 97 is here. It has the correct address. And it looks like the no shutdown command has been issued because we don't see the word shutdown underneath interface vlan97. If I did have an interface shutdown, the config would look like this. We'll do a show run int vlan 97. And now we actually have the word shutdown in our configuration. So we'll do no shutdown on that interface. And then what we can do is now that we know our layer 3 interface for VLAN 97 is configured, we can go look at some other things. Now, this log message that just popped up here should be a good indicator to us of where the problem might be. It says here that interface vlan97 changed state to down. Well why is interface VLAN 97 down? Well let's do a few other show commands to verify this. If I do show int vlan 97, and right now it doesn't look like we have any errors on our interface. If there were errors on our interface, we would see a number higher than 0 here for runts, giants, or throttles, or a number greater than 0 for output errors or input errors and so on. There is one interface reset. I'm not too concerned about one interface reset setting up a situation where the user would experience a slow network. However, most of the information we need about our network is right here because this interface is in a down state. It is not in an up state. So we don't have any errors. Our interface is down. And we have to consider what would cause this. One of the major things that causes an interface VLAN to go down is that the VLAN is not in the VLAN database. So if I issue the command show vlan, what we'll find out is all the VLANs that are currently configured on this device. If I scroll up, we can see that VLANs 20 and 80 and 99 and 600 are configured, but we do not have a VLAN 97. So if I do show int trunk, that will show me my trunk links. And right now we can see here as well that the VLANs that are configured to be allowed on my trunk link are 20, 80, and 97. And the VLANs that are actually active on that trunk link are only VLANs 20 and 80. Let's move into configure mode and add VLAN 97 to our configuration and see what happens. Once we add that VLAN, we should see a log message telling us that interface VLAN 97 changed state to up. Let's try doing a show int vlan 97. It still says the interface is down. Let's try sending a ping message to our default gateway at 10. 0. 97. 1. That was messy. Let's try that again. It looks like when I sent that ping message, it brought that interface VLAN 97 back up. So, now I can ping my default gateway of the router. What I should be able to do now is ping that device from my PC here. So if I send a ping message now to 10. 0. 97. 6, now I'm getting a response from it. If I then go to my PuTTY session and open a new PuTTY session and try SSHing to 10. 0. 97. 6, we should hopefully get success here. We'll log in as me. And now I am able to SSH now to my switch. So the issue here was that my switch did not have VLAN 97 configured and, therefore, interface VLAN 97 wouldn't come up, which wouldn't allow us to SSH to the switch.
Demo: Troubleshooting Slowness on the Network

We have resolved that issue with SSH to the switch. Let's close my PuTTY window to the console port of the switch. And we're going to stick with this SSH session now. Now the user was complaining that their connection to the network seemed to be slow, that they were getting slow performance from the devices that they were trying to connect to and that they couldn't connect to the internet at all. So what I would do here is after I am able to SSH to the switch, now I can finally investigate the problem that was occurring. So if I just look at interface FastEthernet0/3. I'm not going to look at the configuration. I'm going to do a show interface directly, and that can show me a lot of information about the configuration and status of this interface. So first off, if I was looking to see for slowness on this interface, I would definitely check to see what the errors were like or if there were errors. And right now it looks like there're a couple of errors here. We have some collisions and interface reset. Looks like there were some multicast messages, but that's not a bad thing. What we're looking for here are input errors, CRC errors, or output errors. And right now we don't see anything there. It's just these 18 collisions, well big deal. If that number was much higher like 1000 collisions, then I might start scratching my head. Or if that number of collisions was closer to the number of packets that got sent in and out of the interface, then also I would be more concerned. But right now, 18 collisions, that's no big deal. But the thing we have to remember about collisions is there's only one time that a collision is going to occur with a switch, and that's when that switch port is set to half duplex. So if I scroll up in my show interface output here, we will see right here that the interface is currently set to half duplex, and it's set to 10 mbps. So it looks like we may have manually configured or changed the configuration on this port to not auto-negotiate but to be forced to half duplex 10 MB, or it auto-negotiated to half duplex 10 MB. We can easily see that by issuing the show run int f0/3 command, and that will show me what's currently configured there. It looks like speed 10 duplex half is currently issued. So what we can do is go on to int f0/3 and then do a speed auto. When I do a speed auto, what's going to happen here is it's going to renegotiate my connection speed with my PC. And while it's doing that, I'm actually going to lose network connectivity to my switch. And the reason I'm doing that is that I'm actually taking switch port F0/3, I'm bringing it down, and then I'm bringing it back up again. Since I'm connected to that port, I'm losing my connection here. So now I've kind of cut my arm off. Something's up with my interface. We've negotiated the speed to auto, and it shut that interface down for a second. Now I'm finally back up and running. It looks like that connection was restored. It took some time, probably took about 30 seconds for that port to come back up again. Well now we need to do the same thing with our duplex. We're going to say duplex auto, and this will probably force the interface to go down and come back up again, which means we're going to wait about 30 seconds for that port to come back online. Once the interface is back online, we should restore our SSH session, and that should resolve the user's issues of complaining that the speed of their connection was too slow. So we're back online here. We can SSH again. Let's do a show int f0/3 now, and now it looks like we have negotiated full duplex at 100 mbps. This looks a lot better. We should see our collisions disappear now. Once of the ways we can verify that we don't have any more collisions occurring on this link would be to do a clear interface counters. Excuse me, it's clear counters. Let's figure out what's going on here. Clear counter fastEthernet 0/3. And what that will do now is if I do show int f0/3 now, we'll see that that number of collisions is now 0. So now we can come back later and take a look at that interface and see if there are any collisions occurring. We should not see collisions occurring because that link is full duplex. We only see collisions occur when the link is half duplex.
Demo: Troubleshooting SSH Issues on a Router

Let's move on to the next issue that we are experiencing, which was that we were not able to SSH into router 2. So I'm going to save my config here. We do still have an issue that this workstation is unable to access the internet. But, first, let's configure router 2. Let's figure out what's wrong with router 2 so that we can SSH to it. So I'm going to have to once again get out the rollover cable and plug it into the console port of router 2. So let's do that, and we're going to open up PuTTY and see if we can find out what's wrong with our configuration or with SSH in general. So our SSH configuration is listed in a few spots in our configurations on our devices. If I do a show run, that'll show me the entire config here. And let's just go through and make sure we have all the stuff that we need. I do have the enable secret set, but that's really not related to SSH. It's just going to let me get from user mode to privilege mode. SSH will let me into user mode typically, and then I can move from user mode to privilege mode as long as there's an enable secret set. I do have a domain name set. I have a username set. These are all things that I need. I have IP SSH version 2 set up. Our crypto key isn't going to show up here, but I can issue another command to see if the crypto key has been generated. So we'll do that after we look at the running config. If I keep scrolling down, the rest of the SSH config is actually on our line vty. And right here on line vty 0 through 4, it says line vty 0 through 4, no login, transport input telnet. Well what does this mean? Well transport input telnet, we're definitely not going to allow SSH. And with that command, no login, we're never going to ask the user for a password nor for a username and password. SSH requires a username and a password. Telnet, unfortunately, doesn't require either. So what I can actually do here with this command on here is I can Telnet to the router without inputting a username or a password. Let's give it a try. So I'll connect to Telnet here, 10. 0. 99. 2. That's the IP address of router 2, the loopback interface. And look at that. Once I type Telnet and the IP address of that router, I've built an unencrypted session to router 2. And now I'm in user mode. Can't do a whole lot in user mode. I can do show ip route. I can do a few other show commands. But here I'm able to get access to my device unencrypted and without a password. This is bad. This is bad, bad, bad! We should never ever, ever do this. So I'm going to exit out of my Telnet session there, and let's fix this up. Earlier I said there's a command we can issue to see if the crypto key was generated, and that command is show crypto. If we hit a question mark, there're a whole bunch of commands we can use here. We want to do show crypto key, and then we want to do mypubkey, my public key, and then rsa, and that should be all we need here. And there is our crypto key that we've generated. So we do have a key that we can use for SSH encryption. We just don't have it configured correctly. So what we can do is go to line vty 0 through 4. We can say login local to allow for the local username and password database to get activated. Then we say transport input ssh. That will disable Telnet and enable SSH. If I do copy run start, now we can try to SSH to our device. While that's saving, I'm going to open up another PuTTY session here. We'll click on SSH 10. 0. 99. 2. Now we're getting a login prompt, and now we're being asked to put in usernames and passwords to get into our router to do configuration. So I'm going to close out of these two windows here, and we can begin troubleshooting the next part here, which is internet access from our device 10. 0. 20. 10 out to the internet.
Demo: Troubleshooting the Internet Connection

Next, let's go troubleshoot this internet connection where the user's complaining that the internet is not working as expected. So I'm on workstation 10. 0. 20. 10 again. We did resolve the slowness issue that the user was complaining about by fixing that port and the speed and duplex settings there. The next thing we want to do is find out what's up with the internet. So let me try to ping Google's DNS server at 8. 8. 8. 8. And I'm getting a message here that 10. 0. 0. 1 is saying that the time to live has expired in transit. The TTL is the time to live here, and it expired in transit. And whenever we get this message, TTL expired in transit, it means one of two things. It means either that the device on the internet that we're trying to reach is too many hops away, meaning that it's causing the time to live value in our message, in our packet header to expire before it gets there. Now in a Windows machine, our time to live is 128, so we can go through 128 routers before we just throw that packet away. And what that means here is that our packet is going through 128 routers, and then it's getting thrown away, and that's exactly what TTL expired in transit means. This is a strong indicator of a routing loop. A routing loop means that we say, Hey, to go to this network, go that way. And then the next device that it gets to says, Hey, to get to the network that you're trying to get to, go back the other way that you just came from. And then the packet just bounces back and forth between two routers. So here we're getting the message back from 10. 0. 0. 1. If we look at our drawing, here's where drawings become incredibly valuable because now we know exactly where the issue is. It's router 1 is reporting that this message is expiring in transit. Well we can identify even more closely the routing loop by using the traceroute command. So we'll use tracert. There's a clever video out on the internet if I have not mentioned it yet by this kid named HaxOr, and he makes this really wild crazy completely inaccurate video about tracert, but it's very, very funny. I recommend going and checking it out. We'll do a traceroute here to 8. 8. 8. 8 and see what happens. And I forgot to put that -d command in here first, which means that that traceroute command is going to work ridiculously slow without it. That -d what it does is it prevents traceroute from doing a reverse DNS lookup trying to find out what hostname is affiliated with the IP address that we're tracerouting. So we'll do this. It'll go much faster now. So here we go. Here's our broken traceroute. We have it going from 10. 0. 20. 1, which is router 2. And then it goes up to router 1. And then it comes back to router 2. And then it goes back to router 1. And then it goes to router 2. And then router 1 and router 2 and router 1 and router 2, and it's going to do this 128 times for every single message. And then it's going to throw the message away. So our traceroute here is only going to go up to 30, and then it's going to stop working entirely. But that's enough information for us to look and see where our routing loop is occurring. We'll start with SSHing to router 2. And we'll SSH to router 2. We're going to take a look at the routing table there, 10. 0. 99. 2. We'll log in here. And we're going to issue the show ip route command. Anytime we're having issues that appear to be routing related, we want to look at the routing table. How do I know this is routing related? Well my ping message didn't get to the internet, and it had a TTL expired in transmit, meaning that, like I said, we had a routing loop. If it's a routing loop, it's most likely an issue related to the routing table. Well right here if we look, it looks like we have a default route, and the gateway of last resort or the next hop is device 10. 0. 0. 1. Now if you remember back when we had this correctly configured, and we were able to get from our device at 10. 0. 20. 10 out to the internet, I do remember doing a traceroute, and the traceroute said that we went through router 3 first, then we went to router 1. And if we look at the drawing, once again the value of the drawing is going to be very apparent here. If we look at our drawing, that makes sense because it means that we took the Fast Ethernet connection from router 2 to router 3, and then we took the Fast Ethernet connection from router 3 to 3560, then to router 1, then out to the internet. Those were all using 100 MB connections all the way from our PC all the way out to the internet. If our route, our default route here, points that it's going across the serial link, which it is, the exit interface here is Serial0/0/0. Since we're going across that serial link to get out to the internet, chances are it means something is really wonky with our routing tables right now. So there might be multiple issues occurring. So we're going to just troubleshoot one issue at a time. And right here from this routing table, it does not appear that this routing table is causing the routing loop. Why do I say that? Well I say that because it just, from examining the routing table and examining my drawing, the default route must point towards R1 at some point in time. So whether that default route points to R3, then the 3560, then R1, or it just goes across the serial link, either case here our default route is pointing to the router that's connected to the internet. What I need to do next is SSH to R1. So here we'll put in 10. 0. 99. 1, and we'll log in. So here if we do show ip route, let's take a look at what we have. And what we have here is a very common error that occurs when we are setting up static routes. If you look, my gateway of last resort is set to 203. 0. 113. 93, which is not the correct next hop address for the internet. And then if we look down at the static routes that are configured here, there are one, two, three, four, five, six different next hops to get out to the internet. Well one of these is incorrect. Actually, five of them are incorrect, and only one of them is correct. And the reason I say this is a very common problem when people are learning how to configure static routes, we have six default routes here, and we really can't have six default routes. We can only have one default route because there's only one default route. There's only one route we can take when there's no other place to go. So we're going to have to get rid of the static routes here that we don't want. When newbies are configuring static routes, oftentimes they will type the static route in the command line, then they'll do a lookup in the routing table, and maybe the route doesn't show up in the routing table. So then the student will go back and configure another static route to try to get it to pop into the routing table, which also doesn't work. And then they try another one and another one and another one only to find out that they didn't have any of the interfaces they've configured plugged in, so all the interfaces were down, which means that there'll be no routing table with all the interfaces down, which means that the static route also doesn't get added to the table. And then what happens is that when the student realizes that, they plug in the device, but now it adds all of the static routes that it can reach to the routing table all at once, and we get this situation. If I do a show run, we're going to find out that there are many static default routes configured here. There are six of them. And only one of them is correct. So we're going to have to look at which one is the correct one and then delete all of the other ones that we do not need. So there's a real easy way to do this. I'm going to select the routes that I want to delete. Now the correct route here is the very first one. My next hop to the internet is 203. 0. 113. 89. So what I'll do is I'll select the routes that are bad. I'm going to go to Notepad, and we're going to paste those routes in there. And we're going to add the word no in front of each one. If you have a lot of these, you can use the find and replace feature in Notepad. But since there're only five of them here, I'm just going to do it manually. We'll select them, copy them, and we'll go back to our router 1. I'm going to config t, and I'm just going to paste those. And then we'll do a copy run start to save the configuration file. So now that that's saved, let's issue the show ip route command and see if that changed anything here. Now we do have our correct gateway of last resort listed up on top. We only have one static default route to the internet. That looks much, much better. Let's go back to our PC now and see if we can ping to 8. 8. 8. 8. So I'm going to just open up that command prompt here, send the ping message to 8. 8. 8. 8 and see what happens. And it appears that once again, we are not getting connectivity for some reason. So we have two requests timed out. Typically if we're not getting a reply by now, something is broken on our network. So let's go and look at what else could be broken. We're going to go back and look at routing tables once again for our devices. Where we start to look at the routing tables here is not super important, so we can look pretty much anywhere we want. It looks like the static route to the internet here, like we just took a look at, is correct on router 1. Let's double-check on router 2 now and make sure that on router 2 that by us changing our default route to the internet that it didn't affect anything on R2. So I'll do show ip route here, and here it does look like the default route is still pointing out Serial0/0/0. This is not ideal at this point, but once again, we're not troubleshooting speed issues of the internet at this point. We are troubleshooting basic connectivity to the internet. So right now it appears that this device has a route to the internet. If I try on router 2 to ping 8. 8. 8. 8, we are also not getting a response here. So what we should do next is move to R1. So we'll go to R1 since that's the device connected to the internet. We now on R1 can see if we can ping 8. 8. 8. 8. And here we get success. Well that's a head scratcher, isn't it? Or is it? Router 1 is connected to the internet. We are doing Network Address Translation here. And when we have this issue where devices on the inside of our network are unable to ping the internet, but the router that's connected to the internet, R1 in this case, can ping the internet, usually that's an indication that NAT isn't configured correctly. So what I can do is issue the ping command again to 8. 8. 8. 8, and when we ping 8. 8. 8. 8, what it's going to do is it's going to use a source address of the exit interface of that message. So in this case, it's going to use the source address that's configured on F0/1, which is on the 203. 0. 113. 88 network. So that ping message that we just sent and got success for had a source address of a public IP address. So of course we're going to get a response from it. If we change our source address to be an address that's on the inside of our network, like 10. 0. 0. 1, which is the IP address of S0/0/0, we hit Enter here and see if that allows us to get a result. Now what we see is that when the source address of our packet is 10. 0. 0. 1, we do not get a response from the internet anymore. This is a very strong indication that something is broken with Network Address Translation. The NAT statement that we have to issue to get port address translation working on our router is pretty long. If we do a show run, let's take a look at that command that sets up NAT for us. So here is the command that sets up NAT for us. And I explicitly put this command in here just like this because the error is really, really hard to see. This command was accepted by the router, and it added it to the routing configuration, and we're doing some kind of NAT here. The problem is that we did not specify the keyword inside between NAT and source. So see how our port address translation rule is set up here. This one's set up correctly. The rule here set up for our overload does not have the word inside in it, which means that we are not going to be able to ping the internet from our inside devices. Let's move to configuration mode and fix that. The first thing that I want to do is issue the no command to get rid of that translation rule. Since it's already selected, I'm just going to right-click to paste it, and that will get rid of that NAT translation rule. The next thing I want to do is add in the correct translation rule. So that's ip nat inside source list 1 int f0/1 overload. We can quickly check to see if that config was entered correctly. There's a shortcut way to get right to the NAT configuration. And if we do a show run and include | i ip nat inside source, so what we're doing here is we're doing a pipe, and the pipe which is the key that's the Shift key above Enter, what that'll do is it'll allow us to run another command afterward. This is kind of like grep on a Linux machine. Here the i that I entered here is saying include only text that has ip nat inside source. So I hit Enter here. It's going to go through the running config and pull out only the lines that start with those keywords. And here is our command ip nat inside source list 1 interface FastEthernet0/1 overload. That looks correct. Let's try our ping message. So I'll just hit the up arrow a few times to get ping 8. 8. 8. 8 source 10. 0. 0. 1. We hit Enter. Now we're getting success. Let's go down to our workstation. Let's see if we get success here--ping 8. 8. 8. 8, and we are getting success. This is outstanding news!
Demo: Troubleshooting Internet Connection Speed

Now that we can ping the internet, we have to attend to another issue. The bandwidth of that serial link is only about 1. 544 mbps, which means that it's a very slow link. It's almost 100 times slower than our Fast Ethernet links. So we want to avoid taking that serial link unless there are no other options for us. So what that means is that if we try to do a test to the internet from R1, we should experience some pretty slow speeds. We might want to test that using speedtest. net. We'll open up an incognito window here and go to speedtest. net. Speedtest. net is just a service that allows us to check how fast our work station has access to the internet. This website is loading extremely slow already, which tells me that we're probably going over a wicked slow link. We'll click Begin Test, and we'll see what kind of results we get. And there's our indication. See how it's saying right now we're checking download speed. And the maximum download speed we're getting here is 1. 49 mbps. So this is a relatively slow connection to the internet. So now we're going to test the upload speed. And here we're only seeing an upload speed of about a meg and a half again, a little less than a meg and a half here, although it is going up. That average will keep going up as we push more data. So the speed test that we're getting here is a really, really slow internet connection. Our users are definitely going to complain about this. So let's close this window. And we'll rerun that test in a little bit. For the time being, we can also do a traceroute and find out what path we're taking. So we'll do tracert to 8. 8. 8. 8. We're really only interested in the first couple of hops of that connection. I forgot that -d again. So we'll try that again. There we go. Make it run faster. It looks like our connection, the first hop we hit is R2 at 20. 1. The second router we hit is 10. 0. 0. 1. That's router 1. So it means we are going across that serial link. We need to redirect our traffic so it goes across our Fast Ethernet link. So let's go look at what we need to do to accomplish that. Let's look on router 2, and on router 2, I'm going to issue the command show ip ospf neighbor. And what this command is going to do is it's going to show me my neighbors that I have for OSPF. What I expect to see here is I should have a neighbor relationship with R1, and I should have a neighbor relationship with R3. And I do. R1 has that address of 10. 0. 99. 1. R3 has the address of 10. 0. 99. 3. So we are neighbored up with both of those devices, which tells me that something is going on right here. But still my default route to the internet isn't going the right direction. So what I want to do next then is find out if there's something happening on R3 that's causing my issue. So let's open another PuTTY window. And what I'm going to do is SSH to R3, 10. 0. 99. 3. We'll log in. And here we'll issue the same exact command, show ip ospf neighbor. And here we only have one OSPF neighbor. That neighbor is 10. 0. 99. 2, which is R2. I should be seeing another neighbor here for device 10. 0. 99. 4, which is our 3560 switch. So I do not have a neighbor relationship with my 3560 switch. Well let's do some testing there. Can I ping my 3560 switch from R3? Give it a try. So I'm going to ping 10. 0. 0. 13. I get five responses, almost instantaneously. Well, what is happening? What is causing our neighbor to not form with the 3560? If I do a show ip int bri, we see here that my IP address is 10. 0. 0. 14 on FastEthernet0/0. If I compare that to my drawing, that's what it should be. Well what's causing the issue here then? We're not sure yet. How about this. Let's do a show run int f0/0. And here if I look I have IP address 10. 0. 0. 14 with a mask of 255. 255. 255. 248. Well. 248 means that the mask is a /29, and the mask that I have on my drawing is a /30. One of the things that OSPF must have in order to create a neighbor relationship is that the IP addresses and the masks on our interface have to be on the same network, and the mask has to be the same length. And in this case, it must be that I have the correct mask configured on the 3560, and I have the incorrect mask configured here on my R3. So let's go to config mode and fix that--int f0/0. We say ip address 10. 0. 0. 14 because that is correct, but we need to change the mask to 252 as the last octet. Once I do this, very shortly after I should see a neighbor relationship state change for OSPF. Now I am not running terminal monitor here, so I did not see the log message for that. But if I do a show ip ospf neighbor again, we should see two neighbors now. This is looking much more promising because now I actually do have a neighbor relationship with 10. 0. 99. 4. If I do a show ip route now from R3, we should see that our default route is pointing to the next hop of 10. 0. 0. 13. And that is exactly what we're seeing here. So R3 now has a default route that's going over the Fast Ethernet links. Let's go back to R2 and see if there's any change there. So we'll issue the show ip route again. And now it looks like we do have an update to our default route. We're going out to 10. 0. 0. 6, which is the router 3 interface FastEthernet0/1. So this is the correct direction now. Let's go back to the PC and do that traceroute again. This time instead of going all the way out to 8. 8. 8. 8, how about if I just go to my whole network's default gateway of 203. 0. 113. 89. And that'll keep that path a little bit shorter, but it will tell us the precise path that we're taking through our network. So we start again with hitting R2. Now we're hitting 10. 0. 0. 6, which is R3. Then we hit 10. 0. 0. 13, which is the 3560. Then 10. 0. 0. 9, which is R1. And then, finally, we get to our default gateway's address at 203. 0. 113. 89. If we go back to Google again, I'm going to do Ctrl+Shift+N to get that incognito window. We'll go to speedtest. net. This appears to be loading a little bit faster this time. So we'll begin the test again. Hopefully we'll get some better speeds this time. We're certainly not going to get 100 mbps because my internet connection isn't that fast, but it looks like my internet connection is up there around 64 or 65 mbps. So this is a whole lot better than our 1. 5 mbps we were seeing before. So this means that we actually did affect the speed of our traffic by modifying the routing table on our routers, by getting OSPF to neighbor up correctly. Here it's testing my upload speed. Upload speed looks like it's right around 5 mbps. So we can close out our test now. It looks like we had good results with our test. We can move on to the next problems in our system.
Demo: Troubleshooting Access to Network Resources

Let's look at some more issues that we're having on our network. Now we have another user that's complaining. We haven't really paid attention to that network that's hanging off of that 3560 switch. So we have a user over there that's at the 10. 0. 15. 10 device on our network that's the PC connected to the 2960-1 switch. And that user is complaining that they cannot access any network resources at all. So we're going to have to find out what is happening over there on that network and fix any issues that are occurring. I'm going to do all the troubleshooting once again from the 10. 0. 20. 10 workstation, which is the workstation that you see in front of me now. If I open up a command prompt and we try to send a ping message to 10. 0. 15. 10, we are probably not going to get a response. So what this means is that something is broken on the network. Well let's see how far we can get, and let's next try pinging 10. 0. 15. 1 as that is the default gateway configured on our 3560 switch. So we'll try pinging that, and I also am not getting a response. I'm getting a Request timed out. Well if we try once again, if we try to ping, I'll hit Ctrl+C here, if we try to ping now another device on that network, let's try pinging 10. 0. 98. 1, and it appears that we cannot ping that either. So maybe there's an issue on our 3560 switch. There are several other addresses we can ping on that switch, one of which is the loopback interface. So if I send a ping message to 10. 0. 99. 4, we are actually getting a response from that. So that tells me that the switch is up and running. But something else is going on causing our VLAN interfaces to not be up. So let's jump onto that 3560 switch, and that is 10. 0. 99. 4. And let's log in. So we'll log in as ross. We'll put in my password here, Cisco. And it looks like it didn't take my password. Let's try again. So maybe I typed it wrong. Let's try it one more time. C-i-s-c-o. And I know that the password is Cisco and the username is ross. I copied and pasted it. It's possible that my username and password is incorrect here. Regardless of what is correct or incorrect, what we do need to do is we need to move to the console port of that 3560. So if we're in a real network, this may mean driving out to the site where that 3560 is. For me, it's just a matter of taking my rollover cable and plugging it into the console port of the 3560, which is within arm's reach of me right now. So I've done that. We're going to open up PuTTY now again. And this time we're going to use a serial connection to connect to our router. We're going to log in with my password of Cisco. And if I do a show run here, we can take a look and see if there's anything that looks out of line. So my VLAN 10, VLAN 15, and VLAN 98 interfaces, those are all configured. And it looks like there's no shutdown issued on each one of them. We'll do a little bit more investigation of these in a second. But, remember, we were unable to get a ping response from those. If we keep going down our config here and we look at our line vty config, this is usually where errors occur when we're setting up SSH. And here this configuration looks somewhat accurate. Line vty 0 4 here, then the next word is login, then transport input ssh. Well the problem in our config here is that we don't need the word login. What we do need is login local. And adding login local to that line vty 0 through 4 is going to allow us to use the local username and password database that we've configured on the router. That's that username ross. If I do a show run and include username, we can see that I have a username of ross set up there. So when I say login local here under line vty 0 4, it's going to use whatever we've configured here for username and password. Now for SSH to work, we must use login local because we have to have a username and a password in order to get SSH to work. Line vty 0 through 4, and we'll say login local. And that should be enough to get our interface to come back up online. So if we open up a new PuTTY session here and SSH to 10. 0. 99. 4, hopefully we'll be able to log in this time. And that looks much better. So now we've been able to SSH to our 3560. I'm going to close the window of PuTTY that is using the serial port to connect, and we're going to just stick on the 3560 itself here. The next thing I want to do here is take a look at all the interfaces on my router. So let's do a show ip int bri and see what we see here. Right now if we take a look at this VLAN 10 with the IP address 10. 0. 10. 1, right now the status is up, but the line protocol is down. In order for this layer 3 interface to be up and pingable, both the status and the protocol have to say up. Just like we see here for FastEthernet0/2 and 3, we see that the status is up and the line protocol is up, as well as our Loopback0 interface is up and up. And we're SSHed into that loopback interface right now. So what we need to do is we need to find a way to move those three VLAN interfaces from the down state to an up state. Let's find out what's happening with those interfaces. If I look at my show ip int bri, we notice here that FastEthernet0/1 has that unassigned value. And if we look at our drawing, FastEthernet0/1 is the trunk link leaving 3560 going to the 2960. So let's look at that interface. Let's do show run int f0/1, we see that it is configured as a trunk link. If I do show int f0/1 leaving out the word run from there, we're going to see the status of this interface. And, look, it says it's down and not connected. If I look at my switch itself, what I'm seeing there on my 3560 is that there's no link light for port F0/1. So that interface is down. Let's find out why. Is there anything on this device that might be causing the problem? It doesn't appear so, but what we can do is we can go on to the interface and do a shutdown to bring the interface to an administratively down state. And then do a no shutdown command. Now if you notice, I'm not getting those messages popping up on my screen telling me what the status is as it happens on the router. And, remember, to do that I need to issue that command do terminal monitor, and that will then present those messages on the screen. To find out what the status is of FastEthernet0/1 now, we can do a show int f0/1. Remember, I'm adding that do keyword here because I am in config mode. So if we look right now, it does say that the interface is administratively down. So let's issue no shutdown here and see what happens. And we're going to issue no shutdown. It says that it has changed the state to down. And we are not changing the state to up. So if this is the case, what is probably happening is there's probably something wrong on the 2960 switch that's causing the interface FastEthernet0/1 on my 3560 to be down. Now why is it that when my interfaced FastEthernet0/1, that trunk link, why is it when that interface is down that my interface VLANs also go down? Because when I looked at my show ip int bri, we noticed that my VLAN interfaces, those three interfaces there, are all down. It may seem a little misleading to say that the interface is down especially when we look at the status of those interfaces and it says that they're up. Well, now, an interface in order for it to be in an up state, there're two components that have to be up. And one is the status, which is effectively the physical layer component of the interface. And then there's also the protocol, which is the layer 2 component with VLANs. Since there's something up with our VLAN stuff, our protocol went down here. So our status stayed in the up state and really for a virtual interface, these interface VLANs, the status of up is going to happen automatically as long as the interface is created and we issue the no shutdown command, which is issued by default. But when the protocol component of the interface is down, the interface is effectively down and cannot pass traffic. Well in order for those interfaces to be moved to an up state, there has to be at least one interface on the switch that has an active port configured with VLANs 10, 15, and 98. In our case, that's the trunk link. So when our trunk link goes down, all three of those VLAN interfaces also go down. Well what I need to do now is I need to SSH to that 2960. But the only way I can get to SSH to the 2960 is to go to interface VLAN 98. And right now, interface VLAN 98 is down on my layer 3 switch, which means that I will not be able to get to it on the 2960. Additionally, FastEthernet0/1 is down, so I will not be able to get any traffic over to that 2960 switch. So what I'll have to do once again is use my rollover cable and plug it into the console port of my switch. We're going to open up PuTTY now and connect via the serial cable. So log on to the 2960. Let's take a look at show int f0/1 because that's the interface we're currently having problems with. And here it says it's down, line protocol is down, and then the most critical piece of information that's shown here is err-disabled. And I'll let you scratch your head for a second and think about when we encountered err-disabled situations in the past. If you need to pause it, think it over. The err-disabled state is only caused by a few conditions. And typically on switches, switches move their ports to an err-disabled state when port security is misconfigured. So we didn't have port security set up in the previous configurations, but what I did for the troubleshooting is I added port security on here without telling you about it. And we're going to have to fix that now. So we can quickly see that I did enable port security by doing show run int f0/1. And we're going to see here that we have port-security enabled. The default mode here is to only allow one single MAC address and shut down the port should there be a violation. And when we put port security on trunk links, we run into a very, very, very dangerous situation because on a trunk link, we literally have no clue how many MAC addresses are going to be coming in and out of that interface. Since we're connected to another switch, we could have one MAC address, we could have a thousand MAC addresses. Regardless of the case here, though, we do not want to enable port security on trunk links. It's just a bad idea. So let's go to config t, go to int f0/1. We're going to say no switchport port-security. And then in order to get rid of that err-disabled state, what I have to do is I have to shut down the port so it changed state to administratively down. If I now change that state to no shutdown to get rid of administratively down and allow that interface to move to an up state, what happens almost immediately is our interface moves to the up state. Once we took port security off that interface and cycled the state of it by doing a shutdown and no shutdown, it brings that port back to the up state. If we go back to our 3560 and take a look here now, it looks like FastEthernet0/1 changed state to up. And then notice that once that interface came up, so did our VLANs. We should be able to do a quick test here to see if we can SSH to our 2960 switch, 10. 0. 98. 5 to get to our 2960-1 switch. We get a login prompt. That's a good sign. That means our TCP session has been established. I'm able to log in, so excellent! So it looks like we resolved one of the issues with that 2960 switch. I'm going to disconnect the serial cable connection here, and we're just going to work from our SSH session to the 2960. Once again, I'm going to do terminal monitor so I can see all of the log messages that are happening as I'm working on this device.
Demo: Troubleshooting Port Security Violations

The next thing I'd like to do is I have port security enabled on here. Let's see if port security has any violations anywhere else. To do that, I can issue the show port-security command and see if there're any interfaces that look unusual. Here is Fa0/2. The action is shutdown, but this isn't actually telling us what is currently happening on the device. If we do show port-security, and then we do the interface f0/2, let's take a look at that because it's the only other interface on this device. So this interface does appear to be working correctly. Let's see if we can ping 10. 0. 15. 10 from my workstation here at 10. 0. 20. 10. So we'll open up the command prompt and ping 10. 0. 15. 10. And we're getting a message from 10. 0. 0. 13 saying Destination host unreachable. Well which device is that? We go look at our handy dandy drawing, and our drawing says that that is the F0/3 interface of our 3560 switch. Our message is getting to the 3560, but it's not getting past that. And since our 2960-1 is just a layer 2 switch, our ping message won't actually get processed by that device. So we really don't know how far our message is getting. Chances are if we're getting a message back from our 3560, what's happening there is it's saying Destination host unreachable. Usually that means that the 3560 sent out an ARP message looking for 10. 0. 15. 10 to respond, and it didn't get a response. So since it didn't get a response, it couldn't build the frame, and it sent the ICMP message back to me saying I can't get there. Let's see if we can figure out why our packet cannot get to 10. 0. 15. 10. So we'll go back to the 2960. Most likely the issue is happening on the 2960 itself. The reason I say that is because I did get the message back from our 3560 saying it couldn't get there. We're going to find out if there's some issue on our 2960 that's causing the problem. So let's look at our running config, show run int f0/2. And that'll show us our running config here. It looks like we do have port security set up here. And port security, we're going to run the risk of having a violation on this interface because by default, we only allow one single MAC address per port. So once I turn on port security, what's going to happen is I only allow the one single MAC address on that interface. If I see more than one MAC address, what happens is I shut the interface down by default. And in this case, what I have is a voice-over IP phone plus a workstation connected to that switch. And if you remember from a course a long time ago far, far away, my 10. 0. 15. 10 workstation is actually a virtual machine. So typically we see at least two MAC addresses from that virtual machine. So we're going to see two MAC addresses from the PC, at least one MAC address from the phone, and our interface is only going to allow one single MAC address. Well, additionally, if we take a look at our drawing, it says the voice VLAN is 10, and the data VLAN is 15. When I examine my configuration, I have the data VLAN set to 10, and I have my voice VLAN set to 15. So it's just the opposite of what we need. So let's go on to that interface, and we're going to adjust a couple of things. First of all, we're going to take port security off. We'll reapply it in a moment. Next, we're going to change the voice VLAN to be 10, switchport voice vlan 10. And then we're going to change our data VLAN to be 15. That should go a long way in our ability to send messages to and from that device. Next what I want to do is re-enable port security. I need to re-enable it in such a way that it's going to allow more than just the one MAC address. So in this case, since we have the voice-over IP phone plus a PC, and that PC is a virtual machine connected through a physical machine, so we're going to see multiple MAC addresses there, what I want to do is I want to say switchport port-security maximum of at least 5 MAC addresses. What's this going to do for me? Well, it's going to prevent a user there from hooking up a switch and connecting up a bunch more devices. The switchport port-security you have to remember is dependent upon policies that your organization sets up. It is not a mandatory thing that we have to set up on a switch. What it does for us is it helps us prevent devices from getting on to the network that shouldn't be there. Now in order for port security to actually work, we have to enable port security by issuing the switchport port-security command. Now let's see if we can ping our device. So let me send a message here to 10. 0. 15. 10. And we're still getting a message that it's not reachable. I do a quick look at my configuration there, and it looks like my workstation over there on the 10. 0. 15. 10 device was missing a default gateway. So if I try pinging again now, 10. 0. 15. 10, we should get a response. This is exactly what we would expect. And now we have our network functioning again. What we have here is we went through all kinds of troubleshooting. We saw some troubleshooting with NAT. We saw some troubleshooting with routing. We saw some troubleshooting with SSH and Telnet. We saw some troubleshooting with port security. We saw what it looks like with a missing VLAN and how we can have OSPF not form a neighbor relationship because we accidentally type in the wrong subnet mask. So we covered a lot of issues here. I put all of the bad configs in a file for you, so if you want to reproduce this and do your own troubleshooting, you have that chance to do that. I also put in the corrected config files so that you can examine where any errors that you made are, or if you're having trouble working through all the issues of the bad network, you can use the good configs to find out where those errors are.
Summary

So just a very quick wrap up. We did a lot of troubleshooting of those network issues. I just went through all the ones that we did there. I hope you found this valuable. A lot of this information is going to be very valuable on the CCNA, especially for the base configuration stuff that we were looking at. And I highly recommend taking a look at all those Telnet and SSH configs that we worked through, as well as those issues with the missing VLAN and port security. Let's wrap up this module and go on to the last module for this course where I'm going to do an ICND1 preparation checklist for you and go through some tips and tricks that we can use on that CCENT exam called ICND1.
ICND1 Exam Tips
Introduction

Welcome to Pluralsight. I'm Ross Bagurdes. This last module in our ICND1 wrap-up course is going to focus on some exam tips for you. Now that ICND1 exam will earn you the CCENT certification or Cisco Certified Entry-level Network Technician. Our goals this module are to discuss prepping for that ICND1 exam. One of the things I'd like to talk about are some learning styles that you may or may not be aware of. I'm going to encourage you to incorporate as many learning styles as possible in your preparation for the exam. And I'll discuss some resources you can use to find out what you're learning style is best at. And then you can use that to your advantage when you're preparing for this exam. Second, we'll talk about scheduling the exam, and I'll show you where to go on the Pearson VUE website to do that. Then we'll talk about taking the exam. And I'm going to go over what you can expect when you show up in that room, as well as some of the question styles. Now I signed an agreement with Cisco that says I won't tell you what questions you're going to be asked, but I have created some questions that are in the style of Cisco questions, and we can take a look at how we might go about solving those.
Neil Flemming's VARK Model

Let's start by discussing what we need to do to prep for that ICND1 exam. I'd like to start off by talking about learning styles when we're prepping for this exam. In education, most of us grew up with a paradigm that when we learn, we have to read about it, and then we write about it. And the reality is that most of us do not learn well from reading and writing all the time. There is a portion of the population that's really good at that, but then there're others like myself that aren't very good at the reading and the writing component, but it doesn't mean that I'm a bad learner. It just means that I'm not very good at the reading part of it. But if you show me diagrams and pictures and talk about it and get me engaged and do something, my learning experience skyrockets. In vocational education, especially in Wisconsin here at the college I teach at, Madison College, we are heavily encouraged to abandon some of that old paradigm of education and bring in as many new style concepts so that we can be effective at education and not just propagate an educational model that's only effective for a small subset of people. So let's look at this VARK model that Neil Fleming put together. At the bottom there, I put a link to Neil Fleming's website where he has a questionnaire where you can find out what your best learning style is. Here's what the VARK model is. It talks about visual learners, meaning a visual learner is going to learn very well from diagrams, charts, pictures, etc. This is me. I am a strong visual learner. And if you noticed throughout my video series, I don't put a lot of text on the screen. I put a lot of pictures and drawings and charts and whatnot so that we can observe visually what's happening in these data networks and not just have to read about it. The second one here, the A in the VARK model is auditory. Auditory means that you learn best when listening to an explanation. So like these videos, you have a visual component to the video, and then you have an auditory component to the video where you're looking at a diagram, and then you're listening to me explain it to you. The third type here is reading and writing. Reading and writing is effectively you're going to read a book and then take some notes on it. Or take some notes and read them back to yourself. Reading and writing is probably my weakest skill as far as learning goes. However, reading and writing are kind of mandatory when we're working in data networking or any professional field for that matter. So it's not that we can just abandon reading as an educational resource. We can just focus on the stuff that gets us the most bang for our buck with education and then use the stuff that isn't so effective like reading for me in a more minimal sense, but it's still a good idea to incorporate as many of these learning styles as possible when you're prepping for the exam. I'll talk about that in a second. The last one here is kinesthetic. Now kinesthetic can mean lots of things. If you are a sports player, maybe you're a soccer player, and if you're a soccer player, maybe you learn how to move your body by acting it out versus watching somebody do it or listen to somebody explain it to you. Now, this is involving physical activity. In the land of data networking, my opinion of kinesthetic means that we are doing some router and switch configuration. Whether that is actually kinesthetic or not I'm not 100% certain. But we are getting our body involved in typing stuff in to a device and learning if what we type in is actually doing what we expect it to do. So the four learning styles here--visual, auditory, reading and writing, and kinesthetic--all of us are going to be some component of each of these. And what you can do is you can use that link I have at the bottom there to go to Neil Fleming's website and actually take a questionnaire to find out what your strongest learning style is. And I recommend embracing that strong learning style that you discover in your preparation for this exam. My experience in data networking with other engineers tells me that most engineers that I work with are visual and auditory and kinesthetic learners. The reading and writing is usually at the lowest end of the spectrum when we're talking about learning how data networks work. And for me personally, it shows up in all the educational and reading material as well. It's pretty clear that the engineers that write the documentation for data networking aren't always very strong at writing. And certainly reading the information that isn't very well written is also challenging. So maybe it's just that reading and writing is a poor skill set for most engineers in data networking because the information is poorly written. Who knows? Anyway, let's move on and talk about how we can use each one of these now to best educate ourselves to prep for that ICND1 exam.
Prepping for the ICND1

Now the idea here is to use your strong learning style to learn as much as you can and then incorporate the other learning styles, as well as enhance the learning as much as possible. Now I'm talking about this from personal experience, educating hundreds and hundreds and hundreds if not thousands of students one on one. What I recommend here is this. Watch the videos. And if you're at this point, you've probably watched the previous 13 videos, as well as this one. So watch those videos. And while you're watching them at Pluralsight here, take some notes. So then we're engaging two or three learning styles here. You're listening to me, you're looking at the pictures, and you're writing stuff down. That writing stuff down with a pencil or pen and paper engages a different mechanism in your brain than if you're taking notes by typing. So I highly recommend that if you are typing notes, that's fine, just make sure that you write them down at some point as well to engage a different learning style for yourself. When you are taking notes, make sure you create your own study sheets. I have some samples that I'm going to show you in a second here. But a study sheet that you create is intended to focus on material that you feel less confident about. So make sure you write down the material that you find a little bit challenging. My personal experience is that the more you write that stuff down, some kind of magic happens, and all of the sudden, you start to understand something better. And you may have not discovered anything new about that material. Just writing it down and processing it sometimes is all it takes to understand the topic. If for whatever reason that topic isn't sticking in your brain, go back and review it in the videos. Go find a book to read about it. Look on line to see if you can find information about it. The next thing here is reading. And I told you already that my weak skill is reading, but that doesn't mean that I stop reading. I have to read in order to understand some of the protocols and sort through the documentation to find out how to implement certain features of routers and switches. When we are prepping for ICND1 here, I've been a big fan of Todd Lammle's for a very long time. He has a book that came out in September 2016. It's not mandatory that you get this book, but I highly recommend it because it can enhance your learning quite a bit. When you're reading through that book, once again, take some notes. And those notes that you take should be related to the things that you find most challenging. Next, we're going to practice. The practice is going to come in multiple mechanisms here. And one of them is going to be that kinesthetic aspect of learning here, which is our configuration portion of this. The idea here is that you can take some specifications for what we want to accomplish in our data network and then use those specifications to then come up with the right commands and configuration so that our router and switch operates correctly. So engage yourself here. Make sure you're taking notes on anything that you find especially challenging. The next thing that we're going to practice is questions. So I highly recommend getting a bank of questions to practice with. There are some that come along with this video series. If you want to see some questions that are more challenging than what you might see on the ICND1 exam, check out Boson. com. They offer some test simulation software. And that test simulation software in my experience, the questions are substantially harder than what's on the CCNA. Plus, they give you a very nice inventory that matches itself against the exam objectives for the ICND1 exam. So you can kind of see where you're at and where you need to focus more of your studies.
Study Guides

The study guide that I'm talking about here, I remember when I first was learning a lot of the material in the late 90s. I got confused about the protocols and where they operate and how they interact with each other. So I recommend to everybody that you just take this chart. Don't just take a picture of it or a screenshot and print it off. That'll do you no good. Just looking at this sheet probably isn't going to do you a lot of good unless you have some kind of photographic memory where you can just look at this and know where all the protocols exist. If you're like me, I had to write this list out about 20 or 30 times before all the protocols stuck in the right spot. So make sure you're engaging as many learning styles as possible when trying to memorize where all these protocols fit in this hierarchy. The other study sheet I'd create for yourself here is a list of the OSI model and TCP/IP models, and then map out what we call the datagram at each layer. So that at the physical layer there, we have signaling. At the data link layer, we have a frame. At the network layer, we've got a packet. And at the transport layer, we have a segment. Additionally, you're going to want to know what device operates at each layer of the OSI model. On the ICND1 exam, they're most likely not going to ask you what layer of the OSI model a firewall operates, but for your own personal knowledge, firewalls tend to operate now up at the application layer or even outside of the application layer, as well as at the transport layer. Routers, of course, operate at the network layer, switches at the data link layer, and hubs at the physical layer. Again, you want to map out the protocols that occur at each layer. Here at the application layer, you're going to need to know the protocols that I've listed there, as well as what transport layer protocol they use. Of course, all of those protocols up at the application layer that I've listed are either going to use TCP or UDP at the transport layer. They're all going to use IP at the internet layer or the network layer. And then they can use a variety of protocols at the data link layer and physical layer depending upon what data link layer protocol we're using whether that be Ethernet or wireless Ethernet or maybe even a PPP serial connection. Last, you're going to want to know the port numbers for each of the protocols of the application layer. And, again, like I said earlier, you should know what transport layer protocol each of those application layer protocols use.
Scheduling the Exam

Let's move on to the next section here where I talk about scheduling your exam. Now the exam schedule, you're going to want to do this well in advance. So for scheduling your ICND1 exam, you're going to want to make that appointment for that exam at least 30 days before you take it. And the reason for that is that oftentimes those exam centers are booked up for extended periods of time, and it may take you 30 days before you can actually get in and take the exam. I've had it where I've had to wait a month to take the exam. I've also had it where I can go in literally the very next day and take an exam. So just be aware that when you're scheduling this that you should schedule it as far in advance as you possibly can. To do that, you go to pearsonvue. com. You're going to click For test takers. You're going to search for Cisco Systems. Either create an account or sign in to your account. Then you're going to select the proctored exam. We're going to select the ICND1 exam. You're going to set your preferred language, in this case it's either English or Japanese. You choose your testing center. You choose the date and time that you want to take the exam. And then you pay your $150. Let's go through that quickly online. I'm going to go over to my Windows workstation here. So let's take a look at registering for this exam online briefly here. So I'm going to open up my web browser, and we're going to go to pearsonvue. com. And, again, I'm going to click the For test takers section here. And it's going to ask me to search for a program. The program I'm going to search for here is Cisco Systems. So we're just going to select that option there. It's going to bring me to the certification exams for Cisco. On this website, there really isn't anything to register. It's just a bunch of information. So what we need to do here is go over on the right-hand side. It says To schedule, reschedule, or cancel an exam. We're going to sign in or create an account. I already have an account here, so I'm just going to sign in. Once you're logged in or you've created an account, you're going to get to this screen. And what we want to select is the Proctored Exams. In the Proctored Exams, you're going to have to actually go into the testing facility and have somebody observe you taking the exam. So we're going to select the Interconnecting Cisco Networking Devices Part 1, 100-105 exam, select the preferred language. This is English. It'll tell us the exam details here. If you click on the testing policies, it'll tell you the rules. The price is $150. We're going to scroll down here and schedule the exam. Of course, it's going to say Do you accept the policies? I'm going to say Yes, we accept those policies. Once you've gotten to this point, it's going to ask you what testing center you want to use. Now I'm in Madison, Wisconsin, so I'm going to select this testing center in Madison here, New Horizons. We're going to click Next. And then it's going to let us select a date. Well today as I'm recording this, the date is December 7, which means that I cannot schedule an exam. I can't schedule the ICND1 exam until January 17 at the earliest. So it's going to take me, if I wanted to take this exam, it'll take me at least five weeks before I can get in there to take it. So make sure you're getting online and scheduling this as far in advance as you can. I need to select a date that's further out because I have recently taken the ICND1 exam, so I need to move it out at least 180 days here so we can get to the next step. So let me go to June 30 here and see if it'll let me do that. It's going to ask me then, Well, what time to you want to take it? We'll select the one in the morning. There we go. So then it's going to tell us what exam we're taking, the language, how long we have to take the exam, when our appointment is, what location it's at, and then the price of it. It's going to give us some options for some training software. And then we proceed to checkout. And here once we're at the checkout, you can then pay for your exam. So that's how you go register for the exam on Pearson VUE.
Exam Taking Tips

Before you show up to the exam, make sure like I said earlier that you schedule the exam with ample time to study. Do not cram for your exam. Do not stay up all night even if you have a belief that it helps you. UCLA did some research and found out that cramming for tests doesn't work. Staying up all night to prep for tests doesn't work. It actually decreases your performance on the exam. If you do a better job of prepping for the exam so you don't have to stay up all night and study, you're going to be much more effective at the ICND1 exam. The whole idea here is that adults typically do not get enough sleep to begin with. And then when we're trying to prepare for a stressful exam, by staying up all night the night before, it does not add any benefit at all. It actually causes harm to our ability to take the exam. If you're not ready for the exam, reschedule it. You need at least 24 hours' notice to do that. So if you know that you're not going to be ready 24 hours in advance of that exam, reschedule it. Review those study sheets you've created before your exam. So when you go to the exam, don't bring your books. Don't bring a lot of material with you. You're just going to want those couple of study sheets that you've created so that before you walk into the exam, you can review those study sheets and then put them away and then go relax. Reviewing those study sheets is different than cramming. Cramming means that you don't know the material, and you're going to try to learn it in a very short period of time. Creating those study sheets typically means that you have done the right preparation for the exam, and you're just trying to prime your brain for remembering the stuff that you found a bit challenging to remember throughout your education. So don't cram for the exam. Prepare for it. Make those study sheets for yourself that you can review before you walk into the exam. When you show up for the exam at the testing center, they're going to have you empty your pockets. I've even had a test proctor ask me to pull my pockets inside out of my pants. They're going to make sure that everything is out of your pockets including any money that you have in your pockets, your wallet, your cell phone, all that stuff they're going to have you put in a locker so that when you walk into the exam room, you're literally walking in with your clothes. And that's about it. They will give you a piece of plastic paper and a marker to use. And when you walk into the exam, I highly recommend writing down on that plastic sheet of paper any notes of stuff that you've found challenging to remember that you just reviewed on that sheet. And you should do that before you start the exam so that you have your memory down on the piece of paper now instead of up in your head, which will get lost and confused once you start taking the exam. The ICND1 exam is testing you fundamentally on two things. It's testing you on your technical skills and your problem solving skills. On the technical skills side, this is pretty straightforward. They're going to test you on your protocol knowledge, your configuration knowledge, and "Cisco knowledge. " And I put that in quotes because that's the stuff that Cisco wants you to know that may not be valuable in the real world. These are things like standard access control lists go as close to the destination as possible and extended access control lists go as close to the source as possible. Well, that's only true some of the time. And it's not valuable in the real world, but it's incredibly valuable for taking the exam. The second side here, problem solving skills, there are of course going to be technical and network-related problem solving that you're going to have to do. But my experience of the Cisco exams is that the problem solving skills that they're actually testing you on are nontechnical in nature, and they're using the exam itself as a tool to check if you can solve problems. So these are nontechnical in nature. And it's not that you're going to get nontechnical questions. You're going to get technical questions that have strange answers. And you may read the question, and there may not be a right answer apparent. So we have to kind of hack the question as we're taking it because if we can't find the right answer, we're going to have to find out which answer we need to select so that we can move on to the next question. We're going to look at some of those strange questions and answers and a method to approach solving those so that you don't get tripped up during the exam. So like I said earlier, when you begin that exam, write down any notes that you might easily forget first. And then relax and don't panic. Take a deep breath. Don't panic! When you're answering the questions, read all the instructions carefully! And I'll say that again. Read all the instructions carefully! I accidentally skipped over a question on my exam. Fortunately it did not cost me enough points so that I would fail it, but I skipped over a question that had multiple sub-questions under it, and it did cost me a lot of points on my final score. So make sure you read all the instructions carefully. It's very easy to misunderstand what they're asking from you, so make sure that you read all those instructions carefully. I think I've said that enough now. The questions are intentionally tricky. They are trying to trip you up. They're trying to make you feel like you don't know what you're doing. That's their intention. My advice there is don't panic about it. Sort through the questions. Solve the problem. Don't let your ego get involved here and judge you about what you can and can't do. The questions are designed to be tricky to make you feel like you don't know anything. So just relax and walk through the problem as best as you can. The correct answer is not always apparent. This happened to me more than once. Probably about 30% of the questions that I answered, the correct answer was just not clear at all. What I had to do actually was the next step here, the incorrect answers were very easy to spot. The correct answer was almost impossible to find for me. So what I ended up doing was finding all the incorrect answers first and then crossing those off and then using that to my advantage to find the right answer. So there was more than one case where I actually selected answers to a question when I had no idea if the answer was correct or not. In fact, the answers didn't even make sense to me. But I did know that the other answers that were listed under that questions were incorrect. So if you have an example where you have a question with four answers, and you know that two of them are incorrect, well you just increased your chances of guessing correctly from 25% when you didn't eliminate the incorrect answers to 50% when you did. So eliminate those incorrect answers first. Next, for the long questions, sometimes you're going to get a question that's several paragraphs long, read the answers first because then you can prime your brain of what might be an answer they're looking for as you're reading the question. Then you don't have to spend so much time reading the question, looking at the answers, then going back and re-reading the question again. If you read those answers first, your brain will be primed to look for those types of answers inside of the question itself. Read the instructions carefully! I know I have beat this one like a dead horse. Read those instructions carefully. There is more than one question on that exam where a single question is going to have multiple sub-questions. You can easily end up skipping over questions if you do not read those instructions carefully.
Example Questions

The questions themselves. Like I said consistently throughout this video, they are tricky. So I've come up with some sample questions so that you can see what you might expect, and we can walk through a process of how to solve them. So here's the easy one. Of the following, which is related to verifying that the data sent is the same as the data received, and does not request a retransmit should the data verification fail? Well that is a very big statement. There is some precision in it, and there is also some vagueness in it. So in this case, we don't have to know the answer to this question blindly. They've given us 12 answers here to choose from, and we have to pick 4 of those 12 answers, meaning that 8 are incorrect. So now that I know that 4 are correct and 8 are incorrect, I can use that to my advantage when I analyze the answers. So if we start looking at these answers. UDP here--UDP actually does kind of meet this requirement. UDP does not request retransmission should the data verification fail, and there is a checksum value in the UDP header that allows us to check to see if the data sent is the same as the data received. But we're going to leave that be for a second because we're looking for the four best answers here. UDP may be one of those, but let's find out if there're some better answers. The next one down is IP. Well IP doesn't do a lot of verification of the data sent being the same as the data received. The next one, FCS, the frame check sequence. Well that is the footer of a frame header, and in there is the cyclical redundancy check, the CRC, which is used to verify that the data in the frame that was sent is the same as the data that was received. And should the value of the CRC not be the same in the frame header as the computed value on the receiving device, the device will throw away the frame and not request a retransmit. So it looks like FCS is probably a good option here. It looks like letter J there is CRC. So FCS and CRC are probably two of the answers, which is a lightbulb that should go off for myself saying, Hey, this question is probably asking me about an Ethernet frame and not a UDP segment. So let's see if there are two other answers that relate to Ethernet on here, and then we'll have our four answers. So well start with the FCS as a correct answer. If I go down, SSH and TCP, no, those aren't it. F there--CSMA/CD, well, that is a description for an old version of Ethernet. So that's probably one of the correct answers. 802. 3, well, that's another way of describing Ethernet that's the IEEE specification number for Ethernet. And then we've already said that CRC is probably one of those choices as well. So when I'm answering this question, even though UDP is a possible answer here, I'm going to not choose UDP because there are four clear answers that all relate to Ethernet, two of them are related to that FCS and the CRC value. Let's move on to sample question 2 here. This is a little bit harder. What is used in a modern network to connect 2 devices together? Pick 2. So we have 100BaseT, a Switch, RJ-45 Connector, Cat6 Patch Cable, RFC 791, and the TCP/IP Stack. Well, I would argue that you can use all of those to connect two devices together in a modern network. But what Cisco is looking for here or in my case what I'm looking for here are what are the two best answers that will allow us to connect two devices in a modern network. Well if I start with the 100BaseT, that is a description of a 100-MB network using twisted pair cabling. Can I use that? Sure. Is it the best answer? I don't know yet. I'm going to tentatively scratch that one off the list. A switch--a switch is a physical thing that I can actually use to connect two devices together. So that might be high on my list. And RJ-45 connector--well, that's another physical thing that is a component used in connecting devices together, as is a Cat6 patch cable. RFC 791--that describes a protocol, specifically internet protocol. And then the TCP/IP stack--that is a description of the set of protocols used to encapsulate data on our workstations. So it's probably not RFC 791, and it's probably not that TCP/IP stack because those are simply describing protocols used in communication between devices. So that leaves me with B, C, and D. And if I think about this, what I would need to connect two devices together is a switch and Cat6 patch cables. The RJ 45 connectors are already connected to those Cat6 patch cables. So if I choose B and D, those appear to be the best answers, and those appear to be two things that would allow me to connect two devices together and their use in a modern network. Sample question 3--this is an absurd one. This is a question that I created that's nontechnical, but this is how I felt many times taking almost every single Cisco exam I've ever taken. What is a sweet fizzy beverage called? Choose one. Is it Soda, Cola, Coke, Pop, or Carbonated Drink? I don't know. I literally don't know. It is an absurd question. I have no idea how to solve this. So be aware that Cisco sometimes puts questions on that exam that they won't use in your final score. You may not have the ability to pick out what those questions are. In this case, I would just guess. I grew up in Milwaukee, Wisconsin. In Milwaukee, Wisconsin, we call it soda. Other places of the country call it pop. Other places call it coke. I don't think any place calls it a carbonated drink, but that's not an inaccurate answer either. There may not be a correct answer here. They may just be throwing it in to either trip you up or get some feedback about how their questions are written and how their answers are written. So when you get these questions where there's not a correct answer that you can find, don't panic. Sort through it as best as you can. Here I've come up with another absurd-like question that has a technical answer here. And we can walk through how to solve it. In networking, what protocol is used to efficiently move data between 2 nodes on different IP subnets? Choose 1 answer here. Is it Ethernet? Is it IP? Is it TCP? Is it UDP? Is it HTTP? Wow! Well almost all of those can be used to move data between two nodes on different IP subnets. If we start with Ethernet, can Ethernet do that? Well Ethernet can do that as long as there's a router in the middle, so it seems like Ethernet probably isn't a good answer here. IP--can IP move data between two IP subnets? Yes. Can TCP do that? Yes. Can UDP do that? Yup. How about HTTP? Well, HTTP is designed as the hypertext transfer protocol, and that's used to transfer data from a web server to a client. So is that a protocol that's used to efficiently move data between two nodes on different subnets? Maybe, but we're pushing it there. So we're going to cross off HTTP because it doesn't feel like that might be a right answer only because it's up at the application layer of the OSI model. So that leaves us with three answers here. And all three of these can move data between nodes on different IP subnets. The question is, What does it most efficiently? And when we look at efficiency, we can think about maybe DNS. And we went through a case with DNS, which is if we used TCP along with DNS, what we would find is that we would have to send nine messages to resolve a hostname to an IP address. SYN, SYN-ACK, ACK. What's the IP address for this URL? This is the IP address for that URL. FIN-ACK, ACK, FIN-ACK, ACK. It's nine messages. If we did it with UDP, it's two messages. UDP appears to be more efficient than TCP here, which means that UDP is probably the correct answer to this question. I realize it's a tricky one, but you have to watch out for very specific keywords in the question so that we can apply those to the answers to choose the best answer. The best answer that you can pick may or may not be the right answer. It's the best answer.
Summary

Let's wrap up this module here. What we did is we took a look at what we should do for prepping for that ICND1 exam. Specifically, I think you should focus on your learning styles. Go take that quiz over at the VARK website and find out what your learning style is and adapt your studies to the learning style that you learned about. We talked about scheduling the exam, and I walked through the website on what you need to do. I also have that slide up there if you need to take a screenshot of that slide or grab it from the download section so that you can use it as a step-by-step when you're trying to schedule that exam. Taking the exam: We talked about some tips there. One of my biggest ones was don't panic. We did talk about some of the things to expect there, as well as some of the question styles that you might see on that exam. I hope you found all of this valuable. If you are taking the ICND1 exam, I wish you the best of luck. And let me know how it goes. Thank you so much! 
